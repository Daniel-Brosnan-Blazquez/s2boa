"""
Automated tests for the ingestion of the REP_PASS_E files

Written by DEIMOS Space S.L. (femd)

module ingestions
"""
# Import python utilities
import os
import sys
import unittest
import datetime

# Import engine of the DDBB
import eboa.engine.engine as eboa_engine
from eboa.engine.engine import Engine
from eboa.engine.query import Query
from eboa.datamodel.base import Session, engine, Base
from eboa.engine.errors import LinksInconsistency, UndefinedEventLink, DuplicatedEventLinkRef, WrongPeriod, SourceAlreadyIngested, WrongValue, OddNumberOfCoordinates, EboaResourcesPathNotAvailable, WrongGeometry, ErrorParsingDictionary
from eboa.engine.query import Query

# Import datamodel
from eboa.datamodel.dim_signatures import DimSignature
from eboa.datamodel.events import Event, EventLink, EventKey, EventText, EventDouble, EventObject, EventGeometry, EventBoolean, EventTimestamp
from eboa.datamodel.gauges import Gauge
from eboa.datamodel.sources import Source, SourceStatus
from eboa.datamodel.explicit_refs import ExplicitRef, ExplicitRefGrp, ExplicitRefLink
from eboa.datamodel.annotations import Annotation, AnnotationCnf, AnnotationText, AnnotationDouble, AnnotationObject, AnnotationGeometry, AnnotationBoolean, AnnotationTimestamp

# Import ingestion
import eboa.ingestion.eboa_ingestion as ingestion

class TestEdrsAcquisitionIngestion(unittest.TestCase):
    def setUp(self):
        # Create the engine to manage the data
        self.engine_eboa = Engine()
        self.query_eboa = Query()

        # Create session to connectx to the database
        self.session = Session()

        # Clear all tables before executing the test
        self.query_eboa.clear_db()

    def tearDown(self):
        # Close connections to the DDBB
        self.engine_eboa.close_session()
        self.query_eboa.close_session()
        self.session.close()

    def test_insert_only_rep_pass(self):
        filename = "S2A_OPER_REP_PASS_E_CONTAINING_ALL_DATA_TO_BE_PROCESS.EOF"
        file_path = os.path.dirname(os.path.abspath(__file__)) + "/inputs/" + filename

        returned_value = ingestion.command_process_file("s2boa.ingestions.ingestion_edrs_acquisition.ingestion_edrs_acquisition", file_path)

        assert returned_value[0]["status"] == eboa_engine.exit_codes["OK"]["status"]

        # Check number of sources generated
        sources = self.session.query(Source).all()

        assert len(sources) == 1

        # Check that the validity period of the input has taken into consideration the MSI sensing received
        source = self.session.query(Source).filter(Source.validity_start == "2018-07-20 17:33:12.859268",
                                                   Source.validity_stop == "2018-07-21T07:37:55.121811").all()

        assert len(source) == 1

        dim_signatures = self.session.query(DimSignature).all()

        # Check number of dim_signatures generated
        assert len(dim_signatures) == 1

        dim_signature = self.session.query(DimSignature).filter(DimSignature.dim_signature == "RECEPTION_S2A").all()

        assert len(dim_signature) == 1

        # Check number of annotations generated
        annotations = self.session.query(Annotation).all()

        assert len(annotations) == 1

        # Check LINK_DETAILS annotations
        link_details = self.session.query(Annotation).join(AnnotationCnf,ExplicitRef).filter(AnnotationCnf.name == "LINK_DETAILS_CH2",
                                                                                             ExplicitRef.explicit_ref == "L20180608110336202000113").all()

        assert len(link_details) == 1

        assert link_details[0].get_structured_values() == [
            {
                    "name": "link_details",
                    "type": "object",
                    "values": [
                        {
                            "name": "session_id",
                            "type": "text",
                            "value": "L20180608110336202000113"
                        },
                        {
                            "name": "downlink_orbit",
                            "type": "double",
                            "value": "16076.0"
                        },
                        {
                            "name": "satellite",
                            "type": "text",
                            "value": "S2A"
                        },
                        {
                            "name": "reception_station",
                            "type": "text",
                            "value": "EDRS"
                        },
                        {
                            "name": "isp_status",
                            "type": "text",
                            "value": "COMPLETE"
                        },
                        {
                            "name": "acquisition_status",
                            "type": "text",
                            "value": "COMPLETE"
                        }
                    ]
                }
            ]

        # Check number of events generated
        events = self.session.query(Event).all()

        assert len(events) == 3

        # Check ISP_VALIDITY events
        playback_validity_events = self.session.query(Event).join(Gauge).filter(Gauge.name == "PLAYBACK_VALIDITY").all()

        assert len(playback_validity_events) == 2

        definite_playback_validity_event1 = self.session.query(Event).join(Gauge).filter(Gauge.name == "PLAYBACK_VALIDITY",
                                                                                   Event.start == "2018-07-21T07:28:23.002358",
                                                                                   Event.stop == "2018-07-21T07:37:40.689924").all()

        assert definite_playback_validity_event1[0].get_structured_values() == [
            {
                "name": "details",
                "type": "object",
                "values": [
                    {
                        "name": "downlink_orbit",
                        "type": "double",
                        "value": "16076.0"
                    },{
                        "name": "satellite",
                        "type": "text",
                        "value": "S2A"
                    },{
                        "name": "reception_station",
                        "type": "text",
                        "value": "EDRS"
                    },{
                        "name": "channel",
                        "type": "double",
                        "value": "2.0"
                    },{
                        "name": "vcid",
                        "type": "double",
                        "value": "20.0"
                    },{
                        "name": "downlink_mode",
                        "type": "text",
                        "value": "NOMINAL"
                    },{
                        "name": "matching_plan_status",
                        "type": "text",
                        "value": "NO_MATCHED_PLANNED_PLAYBACK"
                    },{
                        "name": "status",
                        "type": "text",
                        "value": "COMPLETE"
                    }
                ]
            }
        ]

        definite_playback_validity_event2 = self.session.query(Event).join(Gauge).filter(Gauge.name == "PLAYBACK_VALIDITY",
                                                                                   Event.start == "2018-07-21T07:37:41.747087",
                                                                                   Event.stop == "2018-07-21T07:37:55.121772").all()

        assert definite_playback_validity_event2[0].get_structured_values() == [
            {
                "name": "details",
                "type": "object",
                "values": [
                    {
                        "name": "downlink_orbit",
                        "type": "double",
                        "value": "16076.0"
                    },{
                        "name": "satellite",
                        "type": "text",
                        "value": "S2A"
                    },{
                        "name": "reception_station",
                        "type": "text",
                        "value": "EDRS"
                    },{
                        "name": "channel",
                        "type": "double",
                        "value": "2.0"
                    },{
                        "name": "vcid",
                        "type": "double",
                        "value": "2.0"
                    },{
                        "name": "downlink_mode",
                        "type": "text",
                        "value": "SAD"
                    },{
                        "name": "matching_plan_status",
                        "type": "text",
                        "value": "NO_MATCHED_PLANNED_PLAYBACK"
                    },{
                        "name": "status",
                        "type": "text",
                        "value": "COMPLETE"
                    }
                ]
            }
        ]

        raw_isp_validity_events = self.session.query(Event).join(Gauge).filter(Gauge.name == "RAW_ISP_VALIDITY").all()

        assert len(raw_isp_validity_events) == 1

        assert raw_isp_validity_events[0].get_structured_values() == [
            {
                "name": "details",
                "type": "object",
                "values": [
                    {
                        "name": "status",
                        "type": "text",
                        "value": "COMPLETE"
                    },{
                        "name": "downlink_orbit",
                         "type": "double",
                         "value": "16076.0"
                    },{
                        "name": "satellite",
                        "type": "text",
                        "value": "S2A"
                    },{
                        "name": "reception_station",
                        "type": "text",
                        "value": "EDRS"
                    },{
                        "name": "channel",
                        "type": "double",
                        "value": "2.0"
                    },{
                        "name": "vcid",
                        "type": "double",
                        "value": "20.0"
                    },{
                        "name": "downlink_mode",
                        "type": "text",
                        "value": "NOMINAL"
                    },{
                        "name": "num_packets",
                        "type": "double",
                        "value": "1931040.0"
                    },{
                        "name": "num_frames",
                        "type": "double",
                        "value": "17927163.0"
                     },{
                        "name": "expected_num_packets",
                        "type": "double",
                        "value": "0.0"
                    },{
                        "name": "diff_expected_received",
                        "type": "double",
                        "value": "-1931040.0"
                    },{
                        "name": "packet_status",
                        "type": "text",
                        "value": "MISSING"
                    }
                ]
            }
        ]

        explicit_refs = self.session.query(ExplicitRef).all()

        assert len(explicit_refs) == 1

        definite_explicit_ref = self.session.query(ExplicitRef).join(ExplicitRefGrp).filter(ExplicitRef.explicit_ref == "L20180608110336202000113",
                                                                                    ExplicitRefGrp.name == "EDRS_LINK_SESSION_IDs").all()

        assert len(definite_explicit_ref) == 1

    #Issues to be fixed in the ingestion
    def test_insert_rep_pass_with_msi_gaps(self):

        filename = "S2A_NPPF.EOF"
        file_path = os.path.dirname(os.path.abspath(__file__)) + "/inputs/" + filename

        returned_value = ingestion.command_process_file("s2boa.ingestions.ingestion_nppf.ingestion_nppf", file_path)

        assert returned_value[0]["status"] == eboa_engine.exit_codes["OK"]["status"]

        filename = "S2A_ORBPRE.EOF"
        file_path = os.path.dirname(os.path.abspath(__file__)) + "/inputs/" + filename

        returned_value = ingestion.command_process_file("s2boa.ingestions.ingestion_orbpre.ingestion_orbpre", file_path)

        assert returned_value[0]["status"] == eboa_engine.exit_codes["OK"]["status"]

        filename = "S2__SRA.EOF"
        file_path = os.path.dirname(os.path.abspath(__file__)) + "/inputs/" + filename

        returned_value = ingestion.command_process_file("s2boa.ingestions.ingestion_slot_request_edrs.ingestion_slot_request_edrs", file_path)

        assert returned_value[0]["status"] == eboa_engine.exit_codes["OK"]["status"]

        filename = "S2A_OPER_REP_PASS_E_CONTAINING_GAPS.EOF"
        file_path = os.path.dirname(os.path.abspath(__file__)) + "/inputs/" + filename

        returned_value = ingestion.command_process_file("s2boa.ingestions.ingestion_edrs_acquisition.ingestion_edrs_acquisition", file_path)

        assert returned_value[0]["status"] == eboa_engine.exit_codes["OK"]["status"]

        # Check number of events generated
        events = self.session.query(Event).join(Source).filter(Source.name == "S2A_OPER_REP_PASS_E_CONTAINING_GAPS.EOF").all()

        assert len(events) == 14

        # Check number of annotations generated
        annotations = self.session.query(Annotation).all()

        assert len(annotations) == 1

        # Check that the validity period of the input has taken into consideration the MSI sensing received
        source = self.session.query(Source).filter(Source.validity_start == "2018-07-20T17:33:12.859268",
                                                   Source.validity_stop == "2018-07-21T07:37:55.121811").all()

        assert len(source) == 1

        # Check LINK_DETAILS annotations
        link_details = self.session.query(Annotation).join(AnnotationCnf).filter(AnnotationCnf.name == "LINK_DETAILS_CH2").all()

        assert len(link_details) == 1

        assert link_details[0].get_structured_values() == [
            {
                "values": [
                    {
                        "value": "L20180608110336202000113",
                        "type": "text",
                        "name": "session_id"
                    },{
                        "value": "16076.0",
                        "type": "double",
                        "name": "downlink_orbit"
                    },
                    {
                        "value": "S2A",
                        "type": "text",
                        "name": "satellite"
                    },
                    {
                        "value": "EDRS",
                        "type": "text",
                        "name": "reception_station"
                    },
                    {
                        "value": "INCOMPLETE",
                        "type": "text",
                        "name": "isp_status"
                    },
                    {
                        "value": "COMPLETE",
                        "type": "text",
                        "name": "acquisition_status"
                    }
                ],
                "type": "object",
                "name": "link_details"
            }
        ]

        # Check RAW_ISP_VALIDITY events
        raw_isp_validities = self.session.query(Event).join(Gauge).filter(Gauge.name == "RAW_ISP_VALIDITY").all()

        assert len(raw_isp_validities) == 1

        # Check specific RAW_ISP_VALIDITY
        specific_raw_isp_validity1 = self.session.query(Event).join(Gauge).filter(Gauge.name == "RAW_ISP_VALIDITY",
                                                                                 Event.start == "2018-07-21T05:22:08.947423",
                                                                                 Event.stop == "2018-07-21T05:40:39.608000").all()

        assert len(specific_raw_isp_validity1) == 1

        assert specific_raw_isp_validity1[0].get_structured_values() == [
            {
                "name": "details",
                "values": [
                    {
                        "name": "status",
                        "value": "INCOMPLETE",
                        "type": "text"
                    },
                    {
                        "name": "downlink_orbit",
                        "value": "16076.0",
                        "type": "double"
                    },
                    {
                        "name": "satellite",
                        "value": "S2A",
                        "type": "text"
                    },
                    {
                        "name": "reception_station",
                        "value": "EDRS",
                        "type": "text"
                    },
                    {
                        "name": "channel",
                        "value": "2.0",
                        "type": "double"
                    },
                    {
                        "name": "vcid",
                        "value": "20.0",
                        "type": "double"
                    },
                    {
                        "name": "downlink_mode",
                        "value": "NOMINAL",
                        "type": "text"
                    },
                    {
                        "name": "num_packets",
                        "value": "1930040.0",
                        "type": "double"
                    },
                    {
                        "name": "num_frames",
                        "value": "17927163.0",
                        "type": "double"
                    },
                    {
                        "name": "expected_num_packets",
                        "value": "1931040.0",
                        "type": "double"
                    },
                    {
                        "name": "diff_expected_received",
                        "value": "1000.0",
                        "type": "double"
                    },
                    {
                        "name": "packet_status",
                        "value": "MISSING",
                        "type": "text"
                    },
                    {
                        "name": "footprint_details",
                        "type": "object",
                        "values": [
                            {
                                "name": "footprint",
                                "type": "geometry",
                                "value": "POLYGON ((94.116896 59.067486, 93.88456100000001 58.753078, 93.656046 58.438306, 93.431241 58.123179, 93.21004000000001 57.807708, 92.99233 57.491904, 92.778008 57.175776, 92.566996 56.85933, 92.359202 56.542576, 92.15454 56.225521, 91.952922 55.908173, 91.754267 55.590539, 91.55849499999999 55.272628, 91.36553000000001 54.954444, 91.175293 54.635997, 90.987694 54.317295, 90.80268599999999 53.99834, 90.620203 53.67914, 90.440179 53.3597, 90.262552 53.040026, 90.087261 52.720123, 89.91424600000001 52.399996, 89.743452 52.079652, 89.57482299999999 51.759094, 89.40828399999999 51.43833, 89.243803 51.117362, 89.08133100000001 50.796195, 88.92082000000001 50.474832, 88.762224 50.153279, 88.605496 49.831539, 88.450592 49.509616, 88.29746900000001 49.187515, 88.146084 48.865238, 87.996387 48.542791, 87.84833999999999 48.220176, 87.701915 47.897397, 87.557074 47.574457, 87.413781 47.251358, 87.272001 46.928104, 87.13170100000001 46.604699, 86.992847 46.281144, 86.855407 45.957444, 86.719345 45.6336, 86.584621 45.309617, 86.451221 44.985496, 86.319115 44.66124, 86.188275 44.336851, 86.058674 44.012331, 85.93028700000001 43.687683, 85.803085 43.36291, 85.677046 43.038013, 85.552143 42.712994, 85.428338 42.387858, 85.305623 42.062605, 85.183975 41.737237, 85.063373 41.411757, 84.943794 41.086165, 84.825219 40.760463, 84.707627 40.434655, 84.590997 40.108741, 84.475311 39.782724, 84.36053800000001 39.456605, 84.246667 39.130387, 84.133684 38.80407, 84.02157099999999 38.477656, 83.91031 38.151147, 83.799886 37.824544, 83.690282 37.497849, 83.581481 37.171064, 83.473468 36.844189, 83.36622300000001 36.517226, 83.259727 36.190178, 83.153975 35.863045, 83.048952 35.535828, 82.944643 35.208528, 82.841036 34.881148, 82.738117 34.553688, 82.63587200000001 34.22615, 82.534289 33.898534, 82.43335500000001 33.570843, 82.33304800000001 33.243077, 82.233366 32.915238, 82.134297 32.587326, 82.035831 32.259343, 81.937956 31.93129, 81.84066 31.603167, 81.743934 31.274977, 81.64776500000001 30.94672, 81.552145 30.618397, 81.45705599999999 30.290009, 81.362492 29.961558, 81.268446 29.633044, 81.17491 29.304468, 81.081873 28.975831, 80.98932499999999 28.647135, 80.89726 28.31838, 80.805666 27.989566, 80.714536 27.660696, 80.623857 27.331769, 80.53362 27.002788, 80.44382299999999 26.673752, 80.354456 26.344663, 80.265511 26.015521, 80.176982 25.686328, 80.08886 25.357084, 80.001137 25.02779, 79.91380700000001 24.698446, 79.82686099999999 24.369055, 79.740287 24.039616, 79.654084 23.71013, 79.568246 23.380599, 79.482766 23.051023, 79.39763600000001 22.721402, 79.31285 22.391737, 79.228403 22.06203, 79.14428599999999 21.732281, 79.060495 21.402491, 78.977019 21.072661, 78.893855 20.74279, 78.810999 20.412881, 78.728444 20.082933, 78.646185 19.752948, 78.564216 19.422927, 78.48253099999999 19.092869, 78.40112499999999 18.762776, 78.319992 18.432648, 78.239126 18.102486, 78.15852099999999 17.772291, 78.07817300000001 17.442064, 77.99807800000001 17.111804, 77.91823100000001 16.781514, 77.838626 16.451193, 77.759259 16.120842, 77.680125 15.790462, 77.601218 15.460054, 77.52253399999999 15.129617, 77.444067 14.799154, 77.365813 14.468664, 77.28776999999999 14.138149, 77.209931 13.807608, 77.132293 13.477042, 77.05485 13.146453, 76.9776 12.81584, 76.900537 12.485205, 76.823656 12.154548, 76.746954 11.823869, 76.670427 11.49317, 76.59407 11.162451, 76.51788000000001 10.831712, 76.441852 10.500954, 76.365984 10.170178, 76.290269 9.839385, 76.21470600000001 9.508573999999999, 76.13928900000001 9.177747, 76.064015 8.846904, 75.98887999999999 8.516045999999999, 75.913881 8.185174, 75.83901400000001 7.854287, 75.764275 7.523387, 75.68965900000001 7.192474, 75.615165 6.861549, 75.54078699999999 6.530613, 75.466522 6.199665, 75.392368 5.868708, 75.318321 5.53774, 75.244377 5.206763, 75.17053199999999 4.875777, 75.096782 4.544783, 75.02312499999999 4.213782, 74.949557 3.882774, 74.876074 3.551759, 74.802672 3.220739, 74.729349 2.889714, 74.656104 2.558683, 74.582931 2.227649, 74.509827 1.896612, 74.436787 1.565571, 74.363809 1.234528, 74.29089 0.903483, 74.218025 0.572438, 74.145213 0.241391, 74.07244900000001 -0.089656, 73.99973300000001 -0.420702, 73.92706 -0.7517470000000001, 73.854427 -1.082791, 73.781828 -1.413832, 73.709262 -1.744871, 73.636725 -2.075906, 73.564213 -2.406938, 73.491724 -2.737966, 73.419254 -3.068988, 73.34680299999999 -3.400005, 73.274367 -3.731016, 73.20194100000001 -4.062021, 73.129521 -4.393018, 73.057104 -4.724008, 72.98468699999999 -5.05499, 72.912267 -5.385963, 72.839839 -5.716926, 72.767402 -6.04788, 70.22125800000001 -5.482112, 70.295317 -5.15132, 70.36927799999999 -4.82051, 70.443145 -4.489683, 70.51692199999999 -4.15884, 70.59061199999999 -3.827981, 70.664219 -3.497108, 70.737746 -3.16622, 70.811196 -2.835318, 70.88457099999999 -2.504403, 70.957875 -2.173475, 71.03111199999999 -1.842534, 71.104287 -1.511582, 71.177401 -1.180618, 71.25045799999999 -0.849645, 71.32346200000001 -0.518661, 71.396417 -0.187668, 71.469324 0.143334, 71.542188 0.474344, 71.615008 0.805362, 71.687791 1.136388, 71.76054000000001 1.46742, 71.833259 1.798458, 71.905951 2.129501, 71.97861899999999 2.46055, 72.051267 2.791602, 72.123897 3.122659, 72.19651399999999 3.453719, 72.269114 3.784782, 72.341707 4.115847, 72.414295 4.446914, 72.48688199999999 4.777982, 72.559471 5.10905, 72.63206599999999 5.440119, 72.704669 5.771187, 72.77728500000001 6.102253, 72.84991599999999 6.433318, 72.922561 6.764382, 72.995226 7.095442, 73.06791699999999 7.4265, 73.140635 7.757553, 73.213386 8.088602, 73.28617199999999 8.419646999999999, 73.358997 8.750685000000001, 73.431864 9.081718, 73.50477600000001 9.412744, 73.577735 9.743764000000001, 73.650741 10.074776, 73.72380200000001 10.40578, 73.79692300000001 10.736775, 73.87010600000001 11.067761, 73.94335599999999 11.398737, 74.016676 11.729703, 74.090069 12.060658, 74.163539 12.391601, 74.23709100000001 12.722533, 74.310716 13.053453, 74.38442999999999 13.384359, 74.458236 13.715252, 74.53213599999999 14.046132, 74.60613600000001 14.376996, 74.680239 14.707845, 74.75444899999999 15.038679, 74.82877000000001 15.369496, 74.903206 15.700296, 74.977752 16.03108, 75.05241700000001 16.361846, 75.12720899999999 16.692593, 75.20213200000001 17.023322, 75.27718900000001 17.354031, 75.352386 17.68472, 75.427725 18.015388, 75.503212 18.346035, 75.578851 18.676661, 75.65464 19.007264, 75.730583 19.337845, 75.806691 19.668403, 75.88296800000001 19.998937, 75.959418 20.329447, 76.03604799999999 20.659931, 76.11286 20.990391, 76.18986099999999 21.320824, 76.267055 21.65123, 76.34444499999999 21.981609, 76.422025 22.311961, 76.499813 22.642285, 76.57781300000001 22.97258, 76.656032 23.302845, 76.73447299999999 23.633081, 76.813143 23.963286, 76.892048 24.293459, 76.971191 24.623601, 77.05058 24.953711, 77.130207 25.283789, 77.210087 25.613833, 77.290229 25.943843, 77.37063999999999 26.273818, 77.451325 26.603759, 77.53229 26.933663, 77.613542 27.263531, 77.695087 27.593362, 77.776931 27.923155, 77.859073 28.25291, 77.941519 28.582628, 78.02428399999999 28.912305, 78.107376 29.241942, 78.19080200000001 29.571539, 78.274568 29.901094, 78.358682 30.230608, 78.443152 30.560078, 78.527986 30.889505, 78.613186 31.218889, 78.69875 31.548228, 78.784701 31.877523, 78.871047 32.206771, 78.957797 32.535973, 79.04495900000001 32.865127, 79.132542 33.194233, 79.220555 33.52329, 79.30900699999999 33.852298, 79.397907 34.181255, 79.487246 34.510163, 79.57705 34.839019, 79.667332 35.167822, 79.75810199999999 35.496573, 79.849369 35.825269, 79.94114500000001 36.15391, 80.03344 36.482496, 80.126265 36.811025, 80.219633 37.139497, 80.31353900000001 37.467912, 80.408002 37.796268, 80.50304199999999 38.124565, 80.59867199999999 38.4528, 80.69490399999999 38.780975, 80.791751 39.109086, 80.889228 39.437134, 80.987346 39.765118, 81.086122 40.093036, 81.185559 40.420889, 81.28566499999999 40.748675, 81.386471 41.076393, 81.487993 41.404041, 81.59024700000001 41.731619, 81.69324899999999 42.059126, 81.797015 42.386559, 81.901563 42.713919, 82.00691 43.041203, 82.113073 43.368412, 82.220046 43.695545, 82.327873 44.022599, 82.43657399999999 44.349573, 82.54616900000001 44.676467, 82.656679 45.003277, 82.768125 45.330004, 82.880529 45.656645, 82.99391300000001 45.983199, 83.1083 46.309665, 83.223692 46.636042, 83.340126 46.962329, 83.45763700000001 47.288523, 83.576249 47.614622, 83.69598999999999 47.940625, 83.816886 48.26653, 83.93896700000001 48.592335, 84.06226100000001 48.918038, 84.18679899999999 49.243637, 84.312595 49.569132, 84.439679 49.894521, 84.568101 50.2198, 84.697895 50.544967, 84.82909600000001 50.87002, 84.961741 51.194957, 85.095866 51.519775, 85.23151 51.844472, 85.368713 52.169045, 85.50751099999999 52.493492, 85.647919 52.817813, 85.790013 53.142002, 85.93383799999999 53.466057, 86.079441 53.789974, 86.226871 54.11375, 86.376178 54.437383, 86.527413 54.760868, 86.68063100000001 55.084203, 86.835888 55.407383, 86.993207 55.730409, 87.152675 56.053274, 87.31436100000001 56.375973, 87.478329 56.698503, 87.64464700000001 57.020859, 87.813383 57.343036, 87.98461 57.665031, 88.158402 57.986837, 88.334838 58.308451, 88.513972 58.629869, 88.695893 58.951086, 88.880709 59.272094, 89.06851 59.592888, 89.25939099999999 59.91346, 94.116896 59.067486))"
                            }
                        ]
                    }
                ],
                "type": "object"
            }
        ]

        # Check ISP_GAPs events
        isp_gap_events = self.session.query(Event).join(Gauge).filter(Gauge.name.like("ISP_GAP")).all()

        assert len(isp_gap_events) == 3

        # Check definite ISP_GAP
        isp_gap_event1 = self.session.query(Event).join(Gauge).filter(Gauge.name == "ISP_GAP",
                                                                                 Event.start == "2018-07-21T05:22:08.947423",
                                                                                 Event.stop == "2018-07-21T05:40:39.608000").all()

        assert len(isp_gap_event1) == 1

        assert isp_gap_event1[0].get_structured_values() == [
            {
                "name": "details",
                "values": [
                    {
                        "name": "impact",
                        "value": "COMPLETE",
                        "type": "text"
                    },
                    {
                        "name": "band",
                        "value": "1",
                        "type": "text"
                    },
                    {
                        "name": "detector",
                        "value": "6.0",
                        "type": "double"
                    },
                    {
                        "name": "downlink_orbit",
                        "value": "16076.0",
                        "type": "double"
                    },
                    {
                        "name": "satellite",
                        "value": "S2A",
                        "type": "text"
                    },
                    {
                        "name": "reception_station",
                        "value": "EDRS",
                        "type": "text"
                    },
                    {
                        "name": "channel",
                        "value": "2.0",
                        "type": "double"
                    },
                    {
                        "name": "vcid",
                        "value": "20.0",
                        "type": "double"
                    },
                    {
                        "name": "downlink_mode",
                        "value": "NOMINAL",
                        "type": "text"
                    },
                    {
                        "name": "apid",
                        "value": "256.0",
                        "type": "double"
                    },
                    {
                        "name": "footprint_details",
                        "type": "object",
                        "values": [
                            {
                                "name": "footprint",
                                "type": "geometry",
                                "value": "POLYGON ((94.116896 59.067486, 93.88456100000001 58.753078, 93.656046 58.438306, 93.431241 58.123179, 93.21004000000001 57.807708, 92.99233 57.491904, 92.778008 57.175776, 92.566996 56.85933, 92.359202 56.542576, 92.15454 56.225521, 91.952922 55.908173, 91.754267 55.590539, 91.55849499999999 55.272628, 91.36553000000001 54.954444, 91.175293 54.635997, 90.987694 54.317295, 90.80268599999999 53.99834, 90.620203 53.67914, 90.440179 53.3597, 90.262552 53.040026, 90.087261 52.720123, 89.91424600000001 52.399996, 89.743452 52.079652, 89.57482299999999 51.759094, 89.40828399999999 51.43833, 89.243803 51.117362, 89.08133100000001 50.796195, 88.92082000000001 50.474832, 88.762224 50.153279, 88.605496 49.831539, 88.450592 49.509616, 88.29746900000001 49.187515, 88.146084 48.865238, 87.996387 48.542791, 87.84833999999999 48.220176, 87.701915 47.897397, 87.557074 47.574457, 87.413781 47.251358, 87.272001 46.928104, 87.13170100000001 46.604699, 86.992847 46.281144, 86.855407 45.957444, 86.719345 45.6336, 86.584621 45.309617, 86.451221 44.985496, 86.319115 44.66124, 86.188275 44.336851, 86.058674 44.012331, 85.93028700000001 43.687683, 85.803085 43.36291, 85.677046 43.038013, 85.552143 42.712994, 85.428338 42.387858, 85.305623 42.062605, 85.183975 41.737237, 85.063373 41.411757, 84.943794 41.086165, 84.825219 40.760463, 84.707627 40.434655, 84.590997 40.108741, 84.475311 39.782724, 84.36053800000001 39.456605, 84.246667 39.130387, 84.133684 38.80407, 84.02157099999999 38.477656, 83.91031 38.151147, 83.799886 37.824544, 83.690282 37.497849, 83.581481 37.171064, 83.473468 36.844189, 83.36622300000001 36.517226, 83.259727 36.190178, 83.153975 35.863045, 83.048952 35.535828, 82.944643 35.208528, 82.841036 34.881148, 82.738117 34.553688, 82.63587200000001 34.22615, 82.534289 33.898534, 82.43335500000001 33.570843, 82.33304800000001 33.243077, 82.233366 32.915238, 82.134297 32.587326, 82.035831 32.259343, 81.937956 31.93129, 81.84066 31.603167, 81.743934 31.274977, 81.64776500000001 30.94672, 81.552145 30.618397, 81.45705599999999 30.290009, 81.362492 29.961558, 81.268446 29.633044, 81.17491 29.304468, 81.081873 28.975831, 80.98932499999999 28.647135, 80.89726 28.31838, 80.805666 27.989566, 80.714536 27.660696, 80.623857 27.331769, 80.53362 27.002788, 80.44382299999999 26.673752, 80.354456 26.344663, 80.265511 26.015521, 80.176982 25.686328, 80.08886 25.357084, 80.001137 25.02779, 79.91380700000001 24.698446, 79.82686099999999 24.369055, 79.740287 24.039616, 79.654084 23.71013, 79.568246 23.380599, 79.482766 23.051023, 79.39763600000001 22.721402, 79.31285 22.391737, 79.228403 22.06203, 79.14428599999999 21.732281, 79.060495 21.402491, 78.977019 21.072661, 78.893855 20.74279, 78.810999 20.412881, 78.728444 20.082933, 78.646185 19.752948, 78.564216 19.422927, 78.48253099999999 19.092869, 78.40112499999999 18.762776, 78.319992 18.432648, 78.239126 18.102486, 78.15852099999999 17.772291, 78.07817300000001 17.442064, 77.99807800000001 17.111804, 77.91823100000001 16.781514, 77.838626 16.451193, 77.759259 16.120842, 77.680125 15.790462, 77.601218 15.460054, 77.52253399999999 15.129617, 77.444067 14.799154, 77.365813 14.468664, 77.28776999999999 14.138149, 77.209931 13.807608, 77.132293 13.477042, 77.05485 13.146453, 76.9776 12.81584, 76.900537 12.485205, 76.823656 12.154548, 76.746954 11.823869, 76.670427 11.49317, 76.59407 11.162451, 76.51788000000001 10.831712, 76.441852 10.500954, 76.365984 10.170178, 76.290269 9.839385, 76.21470600000001 9.508573999999999, 76.13928900000001 9.177747, 76.064015 8.846904, 75.98887999999999 8.516045999999999, 75.913881 8.185174, 75.83901400000001 7.854287, 75.764275 7.523387, 75.68965900000001 7.192474, 75.615165 6.861549, 75.54078699999999 6.530613, 75.466522 6.199665, 75.392368 5.868708, 75.318321 5.53774, 75.244377 5.206763, 75.17053199999999 4.875777, 75.096782 4.544783, 75.02312499999999 4.213782, 74.949557 3.882774, 74.876074 3.551759, 74.802672 3.220739, 74.729349 2.889714, 74.656104 2.558683, 74.582931 2.227649, 74.509827 1.896612, 74.436787 1.565571, 74.363809 1.234528, 74.29089 0.903483, 74.218025 0.572438, 74.145213 0.241391, 74.07244900000001 -0.089656, 73.99973300000001 -0.420702, 73.92706 -0.7517470000000001, 73.854427 -1.082791, 73.781828 -1.413832, 73.709262 -1.744871, 73.636725 -2.075906, 73.564213 -2.406938, 73.491724 -2.737966, 73.419254 -3.068988, 73.34680299999999 -3.400005, 73.274367 -3.731016, 73.20194100000001 -4.062021, 73.129521 -4.393018, 73.057104 -4.724008, 72.98468699999999 -5.05499, 72.912267 -5.385963, 72.839839 -5.716926, 72.767402 -6.04788, 70.22125800000001 -5.482112, 70.295317 -5.15132, 70.36927799999999 -4.82051, 70.443145 -4.489683, 70.51692199999999 -4.15884, 70.59061199999999 -3.827981, 70.664219 -3.497108, 70.737746 -3.16622, 70.811196 -2.835318, 70.88457099999999 -2.504403, 70.957875 -2.173475, 71.03111199999999 -1.842534, 71.104287 -1.511582, 71.177401 -1.180618, 71.25045799999999 -0.849645, 71.32346200000001 -0.518661, 71.396417 -0.187668, 71.469324 0.143334, 71.542188 0.474344, 71.615008 0.805362, 71.687791 1.136388, 71.76054000000001 1.46742, 71.833259 1.798458, 71.905951 2.129501, 71.97861899999999 2.46055, 72.051267 2.791602, 72.123897 3.122659, 72.19651399999999 3.453719, 72.269114 3.784782, 72.341707 4.115847, 72.414295 4.446914, 72.48688199999999 4.777982, 72.559471 5.10905, 72.63206599999999 5.440119, 72.704669 5.771187, 72.77728500000001 6.102253, 72.84991599999999 6.433318, 72.922561 6.764382, 72.995226 7.095442, 73.06791699999999 7.4265, 73.140635 7.757553, 73.213386 8.088602, 73.28617199999999 8.419646999999999, 73.358997 8.750685000000001, 73.431864 9.081718, 73.50477600000001 9.412744, 73.577735 9.743764000000001, 73.650741 10.074776, 73.72380200000001 10.40578, 73.79692300000001 10.736775, 73.87010600000001 11.067761, 73.94335599999999 11.398737, 74.016676 11.729703, 74.090069 12.060658, 74.163539 12.391601, 74.23709100000001 12.722533, 74.310716 13.053453, 74.38442999999999 13.384359, 74.458236 13.715252, 74.53213599999999 14.046132, 74.60613600000001 14.376996, 74.680239 14.707845, 74.75444899999999 15.038679, 74.82877000000001 15.369496, 74.903206 15.700296, 74.977752 16.03108, 75.05241700000001 16.361846, 75.12720899999999 16.692593, 75.20213200000001 17.023322, 75.27718900000001 17.354031, 75.352386 17.68472, 75.427725 18.015388, 75.503212 18.346035, 75.578851 18.676661, 75.65464 19.007264, 75.730583 19.337845, 75.806691 19.668403, 75.88296800000001 19.998937, 75.959418 20.329447, 76.03604799999999 20.659931, 76.11286 20.990391, 76.18986099999999 21.320824, 76.267055 21.65123, 76.34444499999999 21.981609, 76.422025 22.311961, 76.499813 22.642285, 76.57781300000001 22.97258, 76.656032 23.302845, 76.73447299999999 23.633081, 76.813143 23.963286, 76.892048 24.293459, 76.971191 24.623601, 77.05058 24.953711, 77.130207 25.283789, 77.210087 25.613833, 77.290229 25.943843, 77.37063999999999 26.273818, 77.451325 26.603759, 77.53229 26.933663, 77.613542 27.263531, 77.695087 27.593362, 77.776931 27.923155, 77.859073 28.25291, 77.941519 28.582628, 78.02428399999999 28.912305, 78.107376 29.241942, 78.19080200000001 29.571539, 78.274568 29.901094, 78.358682 30.230608, 78.443152 30.560078, 78.527986 30.889505, 78.613186 31.218889, 78.69875 31.548228, 78.784701 31.877523, 78.871047 32.206771, 78.957797 32.535973, 79.04495900000001 32.865127, 79.132542 33.194233, 79.220555 33.52329, 79.30900699999999 33.852298, 79.397907 34.181255, 79.487246 34.510163, 79.57705 34.839019, 79.667332 35.167822, 79.75810199999999 35.496573, 79.849369 35.825269, 79.94114500000001 36.15391, 80.03344 36.482496, 80.126265 36.811025, 80.219633 37.139497, 80.31353900000001 37.467912, 80.408002 37.796268, 80.50304199999999 38.124565, 80.59867199999999 38.4528, 80.69490399999999 38.780975, 80.791751 39.109086, 80.889228 39.437134, 80.987346 39.765118, 81.086122 40.093036, 81.185559 40.420889, 81.28566499999999 40.748675, 81.386471 41.076393, 81.487993 41.404041, 81.59024700000001 41.731619, 81.69324899999999 42.059126, 81.797015 42.386559, 81.901563 42.713919, 82.00691 43.041203, 82.113073 43.368412, 82.220046 43.695545, 82.327873 44.022599, 82.43657399999999 44.349573, 82.54616900000001 44.676467, 82.656679 45.003277, 82.768125 45.330004, 82.880529 45.656645, 82.99391300000001 45.983199, 83.1083 46.309665, 83.223692 46.636042, 83.340126 46.962329, 83.45763700000001 47.288523, 83.576249 47.614622, 83.69598999999999 47.940625, 83.816886 48.26653, 83.93896700000001 48.592335, 84.06226100000001 48.918038, 84.18679899999999 49.243637, 84.312595 49.569132, 84.439679 49.894521, 84.568101 50.2198, 84.697895 50.544967, 84.82909600000001 50.87002, 84.961741 51.194957, 85.095866 51.519775, 85.23151 51.844472, 85.368713 52.169045, 85.50751099999999 52.493492, 85.647919 52.817813, 85.790013 53.142002, 85.93383799999999 53.466057, 86.079441 53.789974, 86.226871 54.11375, 86.376178 54.437383, 86.527413 54.760868, 86.68063100000001 55.084203, 86.835888 55.407383, 86.993207 55.730409, 87.152675 56.053274, 87.31436100000001 56.375973, 87.478329 56.698503, 87.64464700000001 57.020859, 87.813383 57.343036, 87.98461 57.665031, 88.158402 57.986837, 88.334838 58.308451, 88.513972 58.629869, 88.695893 58.951086, 88.880709 59.272094, 89.06851 59.592888, 89.25939099999999 59.91346, 94.116896 59.067486))"
                            }
                        ]
                    }
                ],
                "type": "object"
            }
        ]
        
        isp_gap_event2 = self.session.query(Event).join(Gauge).filter(Gauge.name == "ISP_GAP",
                                                                                 Event.start == "2018-07-21T05:22:08.947423",
                                                                                 Event.stop == "2018-07-21T05:30:08.947423").all()

        assert len(isp_gap_event2) == 1

        assert isp_gap_event2[0].get_structured_values() == [
            {
                "name": "details",
                "values": [
                    {
                        "name": "impact",
                        "value": "AT_THE_BEGINNING",
                        "type": "text"
                    },
                    {
                        "name": "band",
                        "value": "3",
                        "type": "text"
                    },
                    {
                        "name": "detector",
                        "value": "6.0",
                        "type": "double"
                    },
                    {
                        "name": "downlink_orbit",
                        "value": "16076.0",
                        "type": "double"
                    },
                    {
                        "name": "satellite",
                        "value": "S2A",
                        "type": "text"
                    },
                    {
                        "name": "reception_station",
                        "value": "EDRS",
                        "type": "text"
                    },
                    {
                        "name": "channel",
                        "value": "2.0",
                        "type": "double"
                    },
                    {
                        "name": "vcid",
                        "value": "20.0",
                        "type": "double"
                    },
                    {
                        "name": "downlink_mode",
                        "value": "NOMINAL",
                        "type": "text"
                    },
                    {
                        "name": "apid",
                        "value": "258.0",
                        "type": "double"
                    },
                    {
                        "name": "footprint_details",
                        "type": "object",
                        "values": [
                            {
                                "name": "footprint",
                                "type": "geometry",
                                "value": "POLYGON ((94.116896 59.067486, 93.966227 58.864219, 93.817177 58.660797, 93.669667 58.457229, 93.52373299999999 58.253511, 93.379346 58.049644, 93.236423 57.845638, 93.094965 57.641492, 92.954972 57.437206, 92.81640299999999 57.232782, 92.679182 57.028232, 92.543346 56.823547, 92.408873 56.618731, 92.275689 56.413792, 92.143792 56.20873, 92.013186 56.003543, 91.883841 55.798234, 91.75567700000001 55.592812, 91.628739 55.387272, 91.503005 55.181614, 91.378412 54.975847, 91.254953 54.76997, 91.132639 54.563983, 91.011444 54.357886, 90.89129 54.151689, 90.772223 53.945385, 90.654225 53.738978, 90.53724200000001 53.532472, 90.421262 53.325868, 90.306299 53.119164, 90.192336 52.912362, 90.079292 52.705471, 89.96721700000001 52.498485, 89.856095 52.291405, 89.745878 52.084235, 89.63655199999999 51.876979, 89.52813399999999 51.669632, 89.420609 51.462197, 89.313903 51.254682, 89.208062 51.04708, 89.103072 50.839394, 88.99889400000001 50.631627, 88.895509 50.423782, 88.79293699999999 50.215855, 88.691165 50.007848, 88.59012800000001 49.799768, 88.489863 49.59161, 88.390362 49.383376, 88.291591 49.175068, 88.193528 48.966689, 88.09619600000001 48.758236, 87.999583 48.54971, 87.903631 48.341118, 87.80837099999999 48.132455, 87.71379899999999 47.923722, 87.61988599999999 47.714923, 87.526606 47.506058, 87.43398500000001 47.297126, 87.342012 47.088129, 87.250636 46.879069, 87.159881 46.669946, 87.06974700000001 46.460759, 86.98021 46.25151, 86.89124099999999 46.042203, 86.802868 45.832834, 86.715081 45.623404, 86.627833 45.413918, 86.541146 45.204373, 86.45502 44.99477, 86.36943599999999 44.78511, 86.284364 44.575397, 86.19983000000001 44.365627, 86.11582900000001 44.155801, 86.03231700000001 43.945923, 85.94931 43.735992, 85.86681299999999 43.526007, 85.78480999999999 43.315969, 85.703267 43.105883, 85.622214 42.895744, 85.54164400000001 42.685554, 85.461521 42.475316, 85.38185300000001 42.265028, 85.30265 42.054692, 85.22389699999999 41.844306, 85.14555900000001 41.633876, 85.067668 41.423397, 84.990216 41.212871, 84.91317100000001 41.0023, 84.83654 40.791685, 84.76033200000001 40.581023, 84.684535 40.370317, 84.609115 40.159568, 84.53410100000001 39.948775, 84.45948799999999 39.737939, 84.385248 39.527061, 84.31138300000001 39.316141, 84.237904 39.105179, 84.16480199999999 38.894175, 84.09204200000001 38.683133, 84.01965199999999 38.472049, 83.94762900000001 38.260925, 83.87594799999999 38.049762, 83.804607 37.838561, 83.733619 37.62732, 83.66297900000001 37.416041, 83.592647 37.204725, 83.522655 36.993372, 83.45299900000001 36.781981, 83.383656 36.570554, 83.314623 36.359091, 83.245913 36.147592, 83.177522 35.936056, 83.109413 35.724488, 83.04161499999999 35.512883, 82.974124 35.301244, 82.906921 35.089572, 82.840001 34.877866, 82.773377 34.666126, 82.70704499999999 34.454353, 82.640973 34.242549, 82.575185 34.030712, 82.50967799999999 33.818842, 82.44443699999999 33.606941, 82.379453 33.395009, 82.314742 33.183046, 82.250298 32.971052, 82.186094 32.759028, 82.122148 32.546974, 82.05846200000001 32.334889, 81.99502 32.122776, 81.931814 31.910634, 81.86885700000001 31.698462, 81.806146 31.486262, 81.743657 31.274034, 78.784454 31.876577, 78.84025699999999 32.089486, 78.896199 32.302377, 78.952324 32.515248, 79.008636 32.728098, 79.065102 32.94093, 79.12174 33.153741, 79.178572 33.366532, 79.23559299999999 33.579301, 79.292766 33.792051, 79.350139 34.00478, 79.40771700000001 34.217487, 79.465468 34.430173, 79.52340599999999 34.642838, 79.58155600000001 34.855481, 79.639917 35.068101, 79.698443 35.280701, 79.757189 35.493278, 79.816159 35.705831, 79.87532400000001 35.918362, 79.934692 36.130871, 79.994292 36.343356, 80.05412699999999 36.555817, 80.114142 36.768256, 80.17439899999999 36.98067, 80.23490099999999 37.19306, 80.295621 37.405426, 80.356562 37.617768, 80.41775800000001 37.830085, 80.479213 38.042375, 80.540869 38.254642, 80.602788 38.466884, 80.66497699999999 38.679098, 80.72740899999999 38.891287, 80.790082 39.103451, 80.853036 39.315588, 80.916273 39.527696, 80.979737 39.73978, 81.043488 39.951836, 81.107535 40.163864, 81.171854 40.375864, 81.236437 40.587837, 81.301328 40.799781, 81.36653 41.011695, 81.431989 41.223583, 81.49776 41.435441, 81.563856 41.647268, 81.630257 41.859066, 81.69694699999999 42.070835, 81.763975 42.282573, 81.83134699999999 42.494279, 81.89900799999999 42.705956, 81.96701 42.917602, 82.03537 43.129214, 82.104071 43.340795, 82.17309 43.552346, 82.242482 43.763862, 82.312253 43.975344, 82.382349 44.186796, 82.45281900000001 44.398213, 82.523684 44.609595, 82.594931 44.820943, 82.666528 45.032258, 82.73853699999999 45.243537, 82.81096599999999 45.454779, 82.88376100000001 45.665987, 82.95696700000001 45.877159, 83.03061 46.088293, 83.10468 46.29939, 83.179137 46.510451, 83.254052 46.721474, 83.32943 46.932456, 83.40522300000001 47.143402, 83.48146800000001 47.354309, 83.558198 47.565175, 83.635406 47.776, 83.71304499999999 47.986788, 83.791191 48.197533, 83.86985300000001 48.408234, 83.948982 48.618896, 84.028612 48.829516, 84.10878099999999 49.040091, 84.189488 49.250622, 84.270674 49.461112, 84.352425 49.671556, 84.43474999999999 49.881953, 84.51760400000001 50.092306, 84.60101400000001 50.302614, 84.68502599999999 50.512872, 84.769642 50.723082, 84.854795 50.933249, 84.940579 51.143364, 85.02700400000001 51.353428, 85.11403 51.563444, 85.20167499999999 51.773411, 85.28999399999999 51.983324, 85.378995 52.193183, 85.468598 52.402995, 85.558908 52.612751, 85.64993800000001 52.822451, 85.741649 53.032097, 85.834056 53.24169, 85.927218 53.451223, 86.021151 53.660697, 86.11576599999999 53.870119, 86.211175 54.079479, 86.307395 54.288777, 86.404391 54.498016, 86.50216899999999 54.707196, 86.60080000000001 54.91631, 86.7003 55.125358, 86.800583 55.334348, 86.90176 55.54327, 87.003851 55.752124, 87.106831 55.96091, 87.210695 56.169632, 87.31552499999999 56.378281, 87.42134 56.586856, 87.528057 56.795365, 87.635783 57.0038, 87.74454900000001 57.212157, 87.854333 57.420439, 87.96512300000001 57.628649, 88.07701299999999 57.836777, 88.19002399999999 58.044823, 88.304078 58.252794, 88.41927800000001 58.460682, 88.53566499999999 58.668483, 88.65322399999999 58.876199, 88.771934 59.083833, 88.891903 59.291376, 89.013155 59.498826, 89.13561799999999 59.70619, 89.25939099999999 59.91346, 94.116896 59.067486))"
                            }
                        ]
                    }
                ],
                "type": "object"
            }   
        ]

        isp_gap_event3 = self.session.query(Event).join(Gauge).filter(Gauge.name == "ISP_GAP",
                                                                                 Event.start == "2018-07-21T05:35:36",
                                                                                 Event.stop == "2018-07-21T05:40:39.608000").all()

        assert len(isp_gap_event3) == 1

        assert isp_gap_event3[0].get_structured_values() == [
            {
                "name": "details",
                "values": [
                    {
                        "name": "impact",
                        "value": "AT_THE_END",
                        "type": "text"
                    },
                    {
                        "name": "band",
                        "value": "4",
                        "type": "text"
                    },
                    {
                        "name": "detector",
                        "value": "6.0",
                        "type": "double"
                    },
                    {
                        "name": "downlink_orbit",
                        "value": "16076.0",
                        "type": "double"
                    },
                    {
                        "name": "satellite",
                        "value": "S2A",
                        "type": "text"
                    },
                    {
                        "name": "reception_station",
                        "value": "EDRS",
                        "type": "text"
                    },
                    {
                        "name": "channel",
                        "value": "2.0",
                        "type": "double"
                    },
                    {
                        "name": "vcid",
                        "value": "20.0",
                        "type": "double"
                    },
                    {
                        "name": "downlink_mode",
                        "value": "NOMINAL",
                        "type": "text"
                    },
                    {
                        "name": "apid",
                        "value": "259.0",
                        "type": "double"
                    },
                    {
                        "name": "footprint_details",
                        "type": "object",
                        "values": [
                            {
                                "name": "footprint",
                                "type": "geometry",
                                "value": "POLYGON ((76.777479 11.955565, 76.72785500000001 11.741412, 76.67830499999999 11.527251, 76.628826 11.313081, 76.579418 11.098903, 76.530079 10.884717, 76.48080899999999 10.670523, 76.431606 10.456321, 76.382469 10.242112, 76.333398 10.027895, 76.28439 9.813670999999999, 76.235446 9.599439, 76.186564 9.385201, 76.137742 9.170956, 76.088981 8.956704, 76.040279 8.742445999999999, 75.991634 8.528181999999999, 75.943046 8.313910999999999, 75.894514 8.099634999999999, 75.846037 7.885353, 75.797613 7.671065, 75.749244 7.456771, 75.700925 7.242473, 75.652657 7.028169, 75.604439 6.81386, 75.556271 6.599546, 75.508149 6.385228, 75.46007400000001 6.170905, 75.412047 5.956578, 75.364064 5.742246, 75.316124 5.527911, 75.268227 5.313572, 75.220375 5.099229, 75.172562 4.884882, 75.124788 4.670532, 75.077056 4.456179, 75.02936200000001 4.241823, 74.981703 4.027464, 74.93408100000001 3.813102, 74.886498 3.598737, 74.838947 3.38437, 74.791428 3.170001, 74.74394599999999 2.955629, 74.696495 2.741256, 74.649072 2.526881, 74.60168 2.312504, 74.55432 2.098125, 74.506987 1.883746, 74.459678 1.669364, 74.41240000000001 1.454982, 74.36514699999999 1.240599, 74.31791699999999 1.026216, 74.270708 0.811831, 74.223529 0.597446, 74.176368 0.383061, 74.129226 0.168676, 74.08210699999999 -0.045709, 74.03501 -0.260094, 73.987927 -0.474479, 73.940859 -0.688863, 73.893816 -0.903247, 73.846785 -1.11763, 73.79976600000001 -1.332012, 73.752764 -1.546393, 73.705777 -1.760772, 73.658799 -1.975151, 73.611829 -2.189528, 73.56487799999999 -2.403903, 73.517934 -2.618276, 73.470995 -2.832647, 73.424065 -3.047017, 73.37714699999999 -3.261384, 73.330231 -3.475748, 73.283316 -3.69011, 73.236414 -3.904469, 73.189514 -4.118826, 73.142611 -4.333179, 73.09571200000001 -4.547529, 73.04881899999999 -4.761876, 73.001921 -4.97622, 72.955018 -5.19056, 72.908123 -5.404896, 72.861223 -5.619228, 72.814314 -5.833556, 72.767402 -6.04788, 70.22125800000001 -5.482112, 70.269229 -5.267893, 70.317159 -5.053667, 70.36505 -4.839434, 70.41290100000001 -4.625194, 70.460712 -4.410947, 70.508486 -4.196693, 70.556225 -3.982433, 70.603926 -3.768166, 70.65159199999999 -3.553892, 70.699226 -3.339613, 70.74682799999999 -3.125328, 70.794394 -2.911037, 70.84193 -2.69674, 70.889438 -2.482438, 70.936915 -2.26813, 70.984362 -2.053817, 71.031784 -1.839499, 71.07918100000001 -1.625177, 71.126547 -1.410849, 71.17389 -1.196517, 71.22121199999999 -0.982181, 71.26850899999999 -0.76784, 71.315781 -0.553495, 71.363035 -0.339146, 71.41027200000001 -0.124794, 71.457482 0.089563, 71.504676 0.303923, 71.551855 0.518286, 71.59901600000001 0.732653, 71.646158 0.9470229999999999, 71.693287 1.161395, 71.74040599999999 1.37577, 71.787505 1.590148, 71.834593 1.804529, 71.88167300000001 2.018911, 71.928741 2.233296, 71.97579500000001 2.447683, 72.02284400000001 2.662072, 72.06988800000001 2.876461, 72.116919 3.090854, 72.163944 3.305247, 72.210967 3.519642, 72.257987 3.734037, 72.304996 3.948435, 72.352007 4.162832, 72.39901999999999 4.37723, 72.44602500000001 4.591629, 72.493031 4.806028, 72.540041 5.020427, 72.58705500000001 5.234826, 72.634063 5.449226, 72.681079 5.663625, 72.728104 5.878024, 72.775127 6.092422, 72.82215600000001 6.30682, 72.869197 6.521216, 72.91624899999999 6.735612, 72.96329799999999 6.950007, 73.010362 7.1644, 73.05744300000001 7.378792, 73.104529 7.593183, 73.151625 7.807572, 73.198739 8.021958, 73.245873 8.236343, 73.293008 8.450726, 73.340165 8.665107000000001, 73.387345 8.879484, 73.434538 9.093859999999999, 73.481745 9.308233, 73.528978 9.522603, 73.576238 9.736969, 73.623504 9.951333, 73.670799 10.165694, 73.71812300000001 10.38005, 73.765468 10.594403, 73.812832 10.808753, 73.860229 11.023099, 73.907659 11.23744, 73.95510400000001 11.451778, 74.00258100000001 11.666111, 74.050096 11.880439, 74.09764 12.094763, 74.145207 12.309083, 74.192814 12.523397, 76.777479 11.955565))"
                            }
                        ]
                    }
                ],
                "type": "object"
            }
        ]

        # Check PLAYBACK_GAPs events
        playback_gap_events = self.session.query(Event).join(Gauge).filter(Gauge.name.like("PLAYBACK_GAP")).all()

        assert len(playback_gap_events) == 1

        # Check definite PLAYBACK_GAP
        playback_gap_event1 = self.session.query(Event).join(Gauge).filter(Gauge.name == "PLAYBACK_GAP",
                                                                                 Event.start == "2018-07-21T07:28:23.555000",
                                                                                 Event.stop == "2018-07-21T07:28:23.888999").all()

        assert len(playback_gap_event1) == 1

        assert playback_gap_event1[0].get_structured_values() == [
            {
                "type": "object",
                "values": [
                    {
                        "type": "double",
                        "name": "downlink_orbit",
                        "value": "16076.0"
                    },
                    {
                        "type": "text",
                        "name": "satellite",
                        "value": "S2A"
                    },
                    {
                        "type": "text",
                        "name": "reception_station",
                        "value": "EDRS"
                    },
                    {
                        "type": "double",
                        "name": "channel",
                        "value": "2.0"
                    },
                    {
                        "type": "double",
                        "name": "vcid",
                        "value": "20.0"
                    },
                    {
                        "type": "text",
                        "name": "downlink_mode",
                        "value": "NOMINAL"
                    },
                    {
                        "type": "double",
                        "name": "estimated_lost",
                        "value": "392733.0"
                    },
                    {
                        "type": "double",
                        "name": "pre_counter",
                        "value": "2399762.0"
                    },
                    {
                        "type": "double",
                        "name": "post_counter",
                        "value": "2792496.0"
                    },
                    {
                        "name": "footprint_details",
                        "type": "object",
                        "values": [
                            {
                                "name": "footprint",
                                "type": "geometry",
                                "value": "POLYGON ((41.808028 -31.018905, 38.843875 -30.412247, 38.843875 -30.412247, 41.808028 -31.018905))"
                            }
                        ]
                    }
                ],
                "name": "details"
            }
        ]

    def test_insert_rep_pass_no_data(self):
        filename = "S2A_OPER_REP_PASS_E_NO_DATA.EOF"
        file_path = os.path.dirname(os.path.abspath(__file__)) + "/inputs/" + filename

        returned_value = ingestion.command_process_file("s2boa.ingestions.ingestion_edrs_acquisition.ingestion_edrs_acquisition", file_path)

        assert returned_value[0]["status"] == eboa_engine.exit_codes["OK"]["status"]

        # Check number of events generated
        events = self.session.query(Event).all()

        assert len(events) == 0

        # Check number of annotations generated
        annotations = self.session.query(Annotation).all()

        assert len(annotations) == 0

        # Check that the validity period of the input has taken into consideration the MSI sensing received
        source = self.session.query(Source).filter(Source.validity_start == "2018-07-21T07:28:23",
                                                   Source.validity_stop == "2018-07-21T07:37:55").all()

        assert len(source) == 1

    def test_insert_rep_pass_with_plan(self):

        filename = "S2A_NPPF.EOF"
        file_path = os.path.dirname(os.path.abspath(__file__)) + "/inputs/" + filename

        returned_value = ingestion.command_process_file("s2boa.ingestions.ingestion_nppf.ingestion_nppf", file_path)

        assert returned_value[0]["status"] == eboa_engine.exit_codes["OK"]["status"]

        filename = "S2A_ORBPRE.EOF"
        file_path = os.path.dirname(os.path.abspath(__file__)) + "/inputs/" + filename

        returned_value = ingestion.command_process_file("s2boa.ingestions.ingestion_orbpre.ingestion_orbpre", file_path)

        assert returned_value[0]["status"] == eboa_engine.exit_codes["OK"]["status"]

        filename = "S2__SRA.EOF"
        file_path = os.path.dirname(os.path.abspath(__file__)) + "/inputs/" + filename

        returned_value = ingestion.command_process_file("s2boa.ingestions.ingestion_slot_request_edrs.ingestion_slot_request_edrs", file_path)

        assert returned_value[0]["status"] == eboa_engine.exit_codes["OK"]["status"]

        filename = "S2A_OPER_REP_PASS_E_CONTAINING_ALL_DATA_TO_BE_PROCESS.EOF"
        file_path = os.path.dirname(os.path.abspath(__file__)) + "/inputs/" + filename

        returned_value = ingestion.command_process_file("s2boa.ingestions.ingestion_edrs_acquisition.ingestion_edrs_acquisition", file_path)

        assert returned_value[0]["status"] == eboa_engine.exit_codes["OK"]["status"]
        assert returned_value[1]["status"] == eboa_engine.exit_codes["OK"]["status"]

        # Check sources
        source = self.session.query(Source).filter(Source.validity_start == "2018-07-20T17:33:12.859268",
                                                   Source.validity_stop == "2018-07-21T07:37:55.121811",
                                                   Source.name == "S2A_OPER_REP_PASS_E_CONTAINING_ALL_DATA_TO_BE_PROCESS.EOF",
                                                   Source.processor == "ingestion_edrs_acquisition.py").all()

        assert len(source) == 1

        source = self.session.query(Source).filter(Source.validity_start == "2018-07-21T05:16:48.773036",
                                                   Source.validity_stop == "2018-07-21T05:40:35.417601",
                                                   Source.name == "S2A_OPER_REP_PASS_E_CONTAINING_ALL_DATA_TO_BE_PROCESS.EOF",
                                                   Source.processor == "isp_planning_completeness_ingestion_edrs_acquisition.py").all()

        assert len(source) == 1

        # Check number of events generated
        events = self.session.query(Event).join(Source).filter(Source.name == "S2A_OPER_REP_PASS_E_CONTAINING_ALL_DATA_TO_BE_PROCESS.EOF").all()

        assert len(events) == 10

        # Check PLANNED_IMAGING_ISP_COMPLETENESS_CHANNEL events
        isp_completeness_events = self.session.query(Event).join(Gauge).filter(Gauge.name.like("PLANNED_IMAGING_ISP_COMPLETENESS_CHANNEL%")).all()

        assert len(isp_completeness_events) == 3

        # Check definite ISP completeness
        isp_completeness_missing_left = self.session.query(Event).join(Gauge).filter(Gauge.name.like("PLANNED_IMAGING_ISP_COMPLETENESS_CHANNEL_%"),
                                                                                 Event.start == "2018-07-21T05:16:48.773036",
                                                                                 Event.stop == "2018-07-21T05:22:08.947423").all()

        assert len(isp_completeness_missing_left) == 1

        assert isp_completeness_missing_left[0].get_structured_values() == [
            {
                "type": "object",
                "values": [
                    {
                        "type": "text",
                        "value": "MPMSNOBS",
                        "name": "start_request"
                    },
                    {
                        "type": "text",
                        "value": "MPMSIMID",
                        "name": "stop_request"
                    },
                    {
                        "type": "double",
                        "value": "16075.0",
                        "name": "start_orbit"
                    },
                    {
                        "type": "double",
                        "value": "100.3083",
                        "name": "start_angle"
                    },
                    {
                        "type": "double",
                        "value": "16075.0",
                        "name": "stop_orbit"
                    },
                    {
                        "type": "double",
                        "value": "171.1847",
                        "name": "stop_angle"
                    },
                    {
                        "type": "text",
                        "value": "S2A",
                        "name": "satellite"
                    },
                    {
                        "type": "text",
                        "value": "NOMINAL",
                        "name": "record_type"
                    },
                    {
                        "type": "text",
                        "value": "NOMINAL",
                        "name": "imaging_mode"
                    },
                    {
                        "type": "object",
                        "values": [
                            {
                                "type": "double",
                                "value": "0.0",
                                "name": "start_scn_dup"
                            }
                        ],
                        "name": "parameters"
                    },
                    {
                        "type": "text",
                        "value": "TIME_CORRECTED",
                        "name": "status_correction"
                    },
                    {
                        "type": "double",
                        "value": "-5.365036",
                        "name": "delta_start"
                    },
                    {
                        "type": "double",
                        "value": "-5.12251",
                        "name": "delta_stop"
                    },
                    {
                        "name": "footprint_details",
                        "type": "object",
                        "values": [
                            {
                                "name": "footprint",
                                "type": "geometry",
                                "value": "POLYGON ((121.349247 75.73432, 120.347686 75.475886, 119.379921 75.21351, 118.444672 74.94739300000001, 117.540668 74.677729, 116.666671 74.404701, 115.821434 74.128491, 115.003774 73.84926400000001, 114.212619 73.567162, 113.446876 73.282329, 112.705494 72.99490299999999, 111.987463 72.705011, 111.291723 72.412791, 110.617434 72.118341, 109.963705 71.82176699999999, 109.329684 71.523171, 108.714553 71.222649, 108.117483 70.920299, 107.537744 70.616204, 106.974659 70.31043699999999, 106.42755 70.003074, 105.895767 69.694188, 105.378682 69.383847, 104.875645 69.072124, 104.386166 68.75906999999999, 103.909705 68.444739, 103.445751 68.129188, 102.993814 67.812466, 102.553376 67.494631, 102.124023 67.175724, 101.705354 66.855785, 101.296963 66.534854, 100.898463 66.21297199999999, 100.509464 65.89017800000001, 100.129585 65.566512, 99.75854 65.242001, 99.396006 64.916676, 99.04167700000001 64.59056699999999, 98.695257 64.263704, 98.35641 63.936122, 98.02491499999999 63.60784, 97.700524 63.278882, 97.382992 62.949272, 97.072081 62.619032, 96.76754 62.288188, 96.46914599999999 61.956762, 96.176727 61.624768, 95.890084 61.292225, 95.609027 60.959151, 95.33337299999999 60.625564, 95.06289200000001 60.291488, 94.797472 59.95693, 94.536952 59.621906, 94.28117899999999 59.286429, 94.030002 58.950515, 93.783249 58.61418, 93.540791 58.277436, 93.30252 57.940292, 93.068308 57.60276, 92.838033 57.264851, 92.61157 56.926577, 92.388772 56.587952, 92.169573 56.248981, 91.953868 55.909674, 91.741556 55.57004, 91.53254 55.230087, 91.32669199999999 54.889829, 91.12394500000001 54.549271, 90.924222 54.208419, 90.727441 53.867281, 90.533519 53.525865, 90.342366 53.184178, 90.15389 52.84223, 89.968047 52.500023, 89.784767 52.157565, 89.603982 51.814861, 89.42562599999999 51.471917, 89.249601 51.128742, 89.075875 50.78534, 88.904393 50.441714, 88.73509900000001 50.09787, 88.567936 49.753813, 88.402834 49.409549, 88.23973700000001 49.065084, 88.078614 48.720419, 87.91941799999999 48.37556, 87.7621 48.03051, 87.60661399999999 47.685274, 87.452881 47.339859, 87.300894 46.994265, 87.150609 46.648497, 87.001987 46.302557, 86.85498699999999 45.95645, 86.709553 45.61018, 86.565653 45.263751, 86.423265 44.917164, 86.282353 44.570422, 86.142884 44.223529, 86.004818 43.876488, 85.868105 43.529303, 85.732738 43.181976, 85.598687 42.834509, 85.46592200000001 42.486904, 85.33441500000001 42.139164, 85.204117 41.791294, 85.075014 41.443295, 84.947087 41.095168, 84.820311 40.746917, 84.69466 40.398542, 84.57010200000001 40.050048, 84.44660399999999 39.701437, 84.32416000000001 39.352709, 84.202748 39.003867, 84.082346 38.654914, 83.962932 38.30585, 83.844465 37.956679, 83.72694199999999 37.607402, 83.610347 37.258021, 83.49466 36.908537, 83.379862 36.558952, 83.265925 36.209269, 83.15282999999999 35.859489, 83.04057 35.509614, 82.92912800000001 35.159644, 82.818488 34.809582, 82.70863300000001 34.459429, 82.59952699999999 34.109187, 82.491176 33.758858, 82.383563 33.408442, 82.276675 33.057942, 82.170495 32.707358, 82.065 32.356692, 81.960179 32.005946, 81.856025 31.655121, 81.752526 31.304217, 81.649669 30.953237, 81.547437 30.602182, 81.445808 30.251053, 81.34478300000001 29.899851, 81.24435 29.548578, 81.144498 29.197234, 81.045215 28.845821, 80.946479 28.49434, 80.848286 28.142793, 80.75063 27.79118, 80.653499 27.439502, 80.556884 27.087761, 80.46077 26.735957, 80.36514200000001 26.384092, 80.27 26.032168, 80.17533400000001 25.680184, 80.081135 25.328142, 79.987393 24.976042, 79.89409000000001 24.623888, 79.801225 24.271678, 79.70879100000001 23.919414, 79.61678000000001 23.567096, 79.525183 23.214727, 79.433988 22.862307, 79.34318500000001 22.509837, 79.25277199999999 22.157318, 79.162741 21.80475, 79.07308399999999 21.452135, 78.983795 21.099474, 78.894856 20.746767, 78.80627 20.394016, 78.718029 20.041221, 78.630126 19.688383, 78.54255499999999 19.335504, 78.455303 18.982583, 78.36836599999999 18.629623, 78.28174 18.276623, 78.195418 17.923584, 78.10939399999999 17.570508, 78.023661 17.217396, 77.938209 16.864247, 77.853036 16.511063, 77.768137 16.157846, 77.683504 15.804594, 77.59913299999999 15.451311, 77.51501500000001 15.097995, 77.431145 14.744649, 77.34751900000001 14.391272, 77.264132 14.037866, 77.180978 13.684431, 77.098051 13.330969, 77.015344 12.977479, 76.93285400000001 12.623964, 76.850576 12.270423, 76.76850399999999 11.916857, 76.686634 11.563267, 76.604958 11.209655, 76.52347399999999 10.856019, 76.442176 10.502363, 76.361059 10.148685, 76.280119 9.794987000000001, 76.19935099999999 9.441269999999999, 76.11874899999999 9.087535000000001, 76.03831 8.733781, 75.958029 8.38001, 73.40189700000001 8.945615999999999, 73.47983499999999 9.299562999999999, 73.55783 9.653503000000001, 73.635885 10.007434, 73.71399700000001 10.361356, 73.792171 10.715268, 73.870418 11.06917, 73.94874299999999 11.423061, 74.02715000000001 11.776939, 74.10564100000001 12.130805, 74.184209 12.484659, 74.262873 12.838499, 74.341635 13.192324, 74.420503 13.546134, 74.49947899999999 13.899928, 74.57855600000001 14.253706, 74.657747 14.607468, 74.73706 14.961211, 74.8165 15.314936, 74.896073 15.668641, 74.975779 16.022327, 75.05561299999999 16.375994, 75.135593 16.729639, 75.215726 17.083262, 75.29601599999999 17.436862, 75.376468 17.79044, 75.457071 18.143994, 75.537843 18.497524, 75.618792 18.851029, 75.699926 19.204508, 75.78124800000001 19.557961, 75.862756 19.911387, 75.94445 20.264785, 76.02635100000001 20.618155, 76.108462 20.971496, 76.190791 21.324807, 76.273343 21.678087, 76.356101 22.031337, 76.439094 22.384556, 76.522328 22.737741, 76.60581000000001 23.090893, 76.689547 23.444011, 76.77352999999999 23.797096, 76.85776799999999 24.150145, 76.94228099999999 24.503158, 77.027074 24.856135, 77.112155 25.209073, 77.19752699999999 25.561974, 77.28317800000001 25.914837, 77.36913699999999 26.26766, 77.45541299999999 26.620443, 77.542013 26.973185, 77.628945 27.325884, 77.716196 27.678542, 77.803786 28.031158, 77.891732 28.383729, 77.980041 28.736255, 78.068724 29.088735, 78.157779 29.44117, 78.247201 29.793558, 78.337022 30.145899, 78.427251 30.49819, 78.51789599999999 30.850433, 78.608969 31.202624, 78.700451 31.554766, 78.792374 31.906856, 78.884753 32.258894, 78.977599 32.610877, 79.070922 32.962806, 79.16471900000001 33.314681, 79.258995 33.6665, 79.353781 34.018262, 79.449089 34.369966, 79.54493100000001 34.721611, 79.641319 35.073196, 79.738229 35.424722, 79.83570899999999 35.776186, 79.933773 36.127588, 80.032433 36.478926, 80.131705 36.830199, 80.231579 37.181407, 80.332075 37.53255, 80.433223 37.883625, 80.53504 38.234631, 80.637541 38.585567, 80.740736 38.936432, 80.84461 39.287227, 80.949215 39.637948, 81.05457 39.988595, 81.160691 40.339166, 81.267596 40.689661, 81.375274 41.040078, 81.48375900000001 41.390417, 81.593085 41.740676, 81.703271 42.090852, 81.814339 42.440944, 81.92629700000001 42.790952, 82.03914399999999 43.140876, 82.15293699999999 43.490712, 82.26769899999999 43.840459, 82.383453 44.190115, 82.500224 44.539678, 82.61799499999999 44.88915, 82.736825 45.238526, 82.85674899999999 45.587805, 82.97779300000001 45.936985, 83.099987 46.286064, 83.223336 46.635041, 83.34786200000001 46.983915, 83.47362699999999 47.332683, 83.600661 47.681341, 83.728998 48.029889, 83.858672 48.378323, 83.989662 48.726646, 84.122058 49.074852, 84.255899 49.422937, 84.391222 49.7709, 84.528068 50.118738, 84.666445 50.466451, 84.80640099999999 50.814035, 84.948007 51.161487, 85.091307 51.508802, 85.23635 51.855978, 85.38317600000001 52.203013, 85.53178800000001 52.549908, 85.682293 52.896653, 85.834745 53.243247, 85.9892 53.589685, 86.145717 53.935964, 86.304309 54.282083, 86.465064 54.628038, 86.628068 54.973821, 86.79338799999999 55.319429, 86.961094 55.664856, 87.13124000000001 56.010101, 87.30386900000001 56.355162, 87.47911000000001 56.700027, 87.657045 57.044694, 87.83776 57.389155, 88.021343 57.733405, 88.20782199999999 58.077445, 88.397345 58.421263, 88.590023 58.764852, 88.785962 59.108205, 88.985269 59.451315, 89.188025 59.794178, 89.394334 60.136787, 89.604366 60.479131, 89.818251 60.8212, 90.036125 61.162987, 90.258127 61.50448, 90.48432099999999 61.845681, 90.71494300000001 62.18657, 90.950158 62.527136, 91.190135 62.867368, 91.435051 63.207255, 91.685041 63.54679, 91.940309 63.885958, 92.20110200000001 64.224743, 92.467635 64.563129, 92.740135 64.901101, 93.018824 65.238646, 93.30388000000001 65.575754, 93.595651 65.912398, 93.894413 66.24856, 94.200459 66.584221, 94.51409700000001 66.919358, 94.835571 67.25395899999999, 95.165269 67.587997, 95.50358300000001 67.921441, 95.850892 68.254267, 96.207601 68.58644700000001, 96.574102 68.91795500000001, 96.95079200000001 69.24876500000001, 97.338232 69.578836, 97.73692699999999 69.908131, 98.14741100000001 70.236614, 98.57025299999999 70.564243, 99.005945 70.890989, 99.455214 71.216797, 99.918757 71.54161499999999, 100.397295 71.865392, 100.891594 72.18807, 101.402411 72.50960000000001, 101.93059 72.82991800000001, 102.477134 73.148948, 103.043026 73.466615, 103.629314 73.782842, 104.237114 74.097542, 104.867465 74.410645, 105.521783 74.722032, 106.20142 75.0316, 106.907818 75.339232, 107.642515 75.64480500000001, 108.407055 75.948201, 109.203203 76.24927099999999, 110.032887 76.54785099999999, 110.898082 76.843772, 111.800889 77.136853, 112.743512 77.42689900000001, 121.349247 75.73432))"
                            }
                        ]
                    },
                    {
                        "type": "text",
                        "value": "MISSING",
                        "name": "status"
                    }
                ],
                "name": "details"
            }                    
        ]
        
        isp_completeness_statuses = [event for event in isp_completeness_missing_left if len([value for value in event.eventTexts if value.name == "status" and value.value == "MISSING"]) > 0]

        assert len(isp_completeness_statuses) == 1

        # Check number of annotations generated
        annotations = self.session.query(Annotation).join(Source).filter(Source.name == "S2A_OPER_REP_PASS_E_CONTAINING_ALL_DATA_TO_BE_PROCESS.EOF").all()

        assert len(annotations) == 1

        # Check specific ISP completeness
        isp_completeness_1 = self.session.query(Event).join(Gauge).filter(Gauge.name.like("PLANNED_IMAGING_ISP_COMPLETENESS_CHANNEL_%"),
                                                                                 Event.start == "2018-07-21T05:22:08.947423",
                                                                                 Event.stop == "2018-07-21T05:36:36.329510").all()

        assert len(isp_completeness_1) == 1

        assert isp_completeness_1[0].get_structured_values() == [
            {
                "type": "object",
                "values": [
                    {
                        "type": "text",
                        "value": "RECEIVED",
                        "name": "status"
                    },
                    {
                        "type": "double",
                        "value": "16076.0",
                        "name": "downlink_orbit"
                    },
                    {
                        "type": "text",
                        "value": "S2A",
                        "name": "satellite"
                    },
                    {
                        "type": "text",
                        "value": "EDRS",
                        "name": "reception_station"
                    },
                    {
                        "type": "double",
                        "value": "2.0",
                        "name": "channel"
                    },
                    {
                        "type": "double",
                        "value": "20.0",
                        "name": "vcid"
                    },
                    {
                        "type": "text",
                        "value": "NOMINAL",
                        "name": "downlink_mode"
                    },
                    {
                        "type": "text",
                        "value": "16075.0",
                        "name": "sensing_orbit"
                    },
                    {
                        "name": "footprint_details",
                        "type": "object",
                        "values": [
                            {
                                "name": "footprint",
                                "type": "geometry",
                                "value": "POLYGON ((94.116896 59.067486, 93.93512200000001 58.821977, 93.755695 58.576244, 93.578564 58.330292, 93.403667 58.084127, 93.230935 57.837756, 93.060349 57.59118, 92.89186100000001 57.344402, 92.725425 57.097428, 92.560997 56.850262, 92.398534 56.602906, 92.23799200000001 56.355367, 92.079302 56.107649, 91.92244700000001 55.859755, 91.76739499999999 55.611688, 91.614107 55.36345, 91.462547 55.115045, 91.312679 54.866476, 91.164468 54.617746, 91.017866 54.368861, 90.872834 54.119824, 90.72936 53.870635, 90.587412 53.621297, 90.44696 53.371813, 90.307974 53.122186, 90.170424 52.872419, 90.03428099999999 52.622513, 89.899489 52.372476, 89.766051 52.122305, 89.63394 51.872003, 89.503131 51.621573, 89.373598 51.371016, 89.245318 51.120336, 89.11826499999999 50.869533, 88.992401 50.618613, 88.867707 50.367576, 88.744174 50.116423, 88.62178 49.865157, 88.50050400000001 49.613778, 88.380324 49.36229, 88.26122100000001 49.110692, 88.143169 48.858989, 88.026134 48.607184, 87.910118 48.355275, 87.795102 48.103265, 87.68107000000001 47.851154, 87.56800200000001 47.598946, 87.455883 47.34664, 87.344694 47.09424, 87.23440100000001 46.841747, 87.125001 46.589163, 87.016485 46.336487, 86.90883700000001 46.083722, 86.802041 45.830869, 86.696083 45.577928, 86.59094899999999 45.324902, 86.486616 45.071793, 86.383064 44.818601, 86.280295 44.565328, 86.17829500000001 44.311974, 86.077051 44.05854, 85.976551 43.805027, 85.876783 43.551438, 85.777733 43.297772, 85.67936899999999 43.044033, 85.581701 42.790219, 85.484717 42.536333, 85.388406 42.282374, 85.29275699999999 42.028344, 85.19776 41.774245, 85.103403 41.520076, 85.009666 41.265839, 84.91654 41.011536, 84.82402500000001 40.757167, 84.732111 40.502732, 84.640788 40.248232, 84.55004700000001 39.993669, 84.459878 39.739043, 84.37027 39.484355, 84.28120199999999 39.229606, 84.19268 38.974797, 84.104696 38.719929, 84.017242 38.465001, 83.930308 38.210015, 83.84388800000001 37.954972, 83.75797300000001 37.699872, 83.67254200000001 37.444717, 83.587598 37.189507, 83.503136 36.934243, 83.419149 36.678924, 83.33563100000001 36.423553, 83.252573 36.168129, 83.16996899999999 35.912653, 83.087807 35.657126, 83.006074 35.401549, 82.92477599999999 35.145922, 82.843906 34.890246, 82.76345600000001 34.634522, 82.683421 34.378749, 82.60379399999999 34.122928, 82.52457 33.867061, 82.445729 33.611148, 82.367278 33.35519, 82.28921200000001 33.099186, 82.21152600000001 32.843138, 82.134213 32.587045, 82.05726799999999 32.330909, 81.98068600000001 32.07473, 81.904455 31.818509, 81.82857 31.562246, 81.753033 31.305942, 81.67783799999999 31.049596, 81.60298 30.793211, 81.52845499999999 30.536785, 81.454257 30.28032, 81.38038 30.023817, 81.30681199999999 29.767275, 81.233557 29.510695, 81.160611 29.254078, 81.08797 28.997423, 81.015629 28.740732, 80.943584 28.484005, 80.87183 28.227242, 80.80035599999999 27.970445, 80.729163 27.713613, 80.658249 27.456746, 80.58761 27.199845, 80.51724299999999 26.942911, 80.447143 26.685944, 80.377306 26.428944, 80.307726 26.171913, 80.23839599999999 25.914849, 80.169319 25.657754, 80.10048999999999 25.400629, 80.03190600000001 25.143472, 79.96356400000001 24.886286, 79.89546 24.62907, 79.82759 24.371824, 79.759944 24.114549, 79.692526 23.857246, 79.625332 23.599915, 79.55835999999999 23.342556, 79.491606 23.08517, 79.425067 22.827756, 79.358739 22.570316, 79.29261700000001 22.312849, 79.226697 22.055357, 79.16098 21.797839, 79.095463 21.540296, 79.030142 21.282727, 78.96501499999999 21.025135, 78.90008 20.767518, 78.835331 20.509877, 78.770763 20.252213, 78.706377 19.994526, 78.642171 19.736817, 78.578143 19.479084, 78.51428900000001 19.22133, 78.45060700000001 18.963554, 78.38709299999999 18.705756, 78.32374299999999 18.447938, 78.26055599999999 18.190099, 78.19753 17.932239, 78.134664 17.67436, 78.07195400000001 17.41646, 78.009398 17.158541, 77.946994 16.900604, 77.884738 16.642647, 77.822626 16.384672, 77.760659 16.126679, 77.698835 15.868668, 77.63715000000001 15.61064, 77.575603 15.352594, 77.514191 15.094532, 77.452913 14.836453, 77.391763 14.578358, 77.330742 14.320248, 77.269848 14.062121, 77.20907800000001 13.803979, 77.14843 13.545823, 77.087903 13.287651, 77.027494 13.029466, 76.96720000000001 12.771266, 76.90701900000001 12.513052, 76.846951 12.254825, 76.786993 11.996585, 76.727142 11.738332, 76.66739800000001 11.480067, 76.607758 11.221789, 76.548219 10.9635, 76.48878000000001 10.705198, 76.42944 10.446886, 76.37019600000001 10.188562, 76.311046 9.930227, 76.25198899999999 9.671882, 76.193023 9.413527, 76.134146 9.155162000000001, 76.075355 8.896787, 76.01665 8.638403, 75.958029 8.38001, 73.40189700000001 8.945615999999999, 73.45882 9.204136999999999, 73.515772 9.462654000000001, 73.57275300000001 9.721166, 73.629758 9.979675, 73.686798 10.238179, 73.74387400000001 10.496677, 73.800988 10.75517, 73.858141 11.013657, 73.915335 11.272138, 73.972572 11.530613, 74.029843 11.789083, 74.087159 12.047545, 74.14452300000001 12.306001, 74.201936 12.564449, 74.259401 12.82289, 74.316919 13.081322, 74.37449100000001 13.339747, 74.432115 13.598164, 74.48979 13.856573, 74.547526 14.114973, 74.605324 14.373364, 74.663185 14.631746, 74.72111200000001 14.890118, 74.779107 15.14848, 74.83717 15.406832, 74.895293 15.665175, 74.95348799999999 15.923507, 75.011758 16.181828, 75.070105 16.440138, 75.12853200000001 16.698437, 75.187039 16.956724, 75.24562899999999 17.214999, 75.304294 17.473262, 75.363041 17.731514, 75.42187699999999 17.989752, 75.48080400000001 18.247978, 75.539824 18.506191, 75.598939 18.76439, 75.658152 19.022575, 75.71745900000001 19.280747, 75.776856 19.538905, 75.83635700000001 19.797048, 75.89596299999999 20.055177, 75.95567699999999 20.313291, 76.015502 20.571389, 76.075439 20.829472, 76.13549 21.087539, 76.195644 21.345591, 76.255915 21.603626, 76.31630699999999 21.861645, 76.376823 22.119647, 76.437466 22.377632, 76.498237 22.6356, 76.55914 22.89355, 76.620167 23.151482, 76.68132199999999 23.409396, 76.742615 23.667292, 76.80404900000001 23.92517, 76.865627 24.183028, 76.927351 24.440867, 76.989225 24.698686, 77.051249 24.956486, 77.11341 25.214266, 77.17572699999999 25.472026, 77.23820499999999 25.729765, 77.30084600000001 25.987484, 77.363652 26.245181, 77.426627 26.502856, 77.489774 26.76051, 77.55308100000001 27.018142, 77.616559 27.275752, 77.680218 27.533339, 77.74406 27.790904, 77.808089 28.048445, 77.87230700000001 28.305963, 77.93671999999999 28.563456, 78.001323 28.820926, 78.066109 29.078373, 78.13109900000001 29.335794, 78.19629399999999 29.593191, 78.2617 29.850562, 78.32732 30.107907, 78.393156 30.365227, 78.459214 30.62252, 78.525475 30.879787, 78.591962 31.137028, 78.65868 31.394242, 78.725633 31.651428, 78.79282600000001 31.908586, 78.860263 32.165716, 78.927948 32.422818, 78.995873 32.679891, 79.06404000000001 32.936936, 79.13246700000001 33.193951, 79.20115800000001 33.450936, 79.270117 33.707891, 79.33935 33.964816, 79.40886 34.221709, 79.478652 34.478572, 79.548705 34.735404, 79.619049 34.992204, 79.689689 35.248972, 79.760631 35.505707, 79.831878 35.762409, 79.903437 36.019078, 79.975312 36.275713, 80.04749099999999 36.532314, 80.11998699999999 36.788881, 80.192814 37.045414, 80.26598 37.301911, 80.339489 37.558372, 80.413347 37.814797, 80.48756 38.071185, 80.562127 38.327536, 80.637038 38.583852, 80.712322 38.840129, 80.78798500000001 39.096368, 80.864034 39.352569, 80.94047500000001 39.60873, 81.017314 39.864851, 81.09456 40.120932, 81.172192 40.376974, 81.250238 40.632975, 81.32871 40.888934, 81.407616 41.144851, 81.486963 41.400726, 81.566759 41.656557, 81.647012 41.912345, 81.727715 42.16809, 81.80887199999999 42.423791, 81.89050899999999 42.679446, 81.972635 42.935056, 82.05525799999999 43.190619, 82.13838800000001 43.446136, 82.22203399999999 43.701605, 82.306203 43.957025, 82.390872 44.212399, 82.476083 44.467724, 82.561847 44.722999, 82.648173 44.978223, 82.735073 45.233395, 82.82255600000001 45.488516, 82.910633 45.743584, 82.999291 45.9986, 83.08855 46.253563, 83.178436 46.508471, 83.26896000000001 46.763324, 83.360135 47.01812, 83.451971 47.272859, 83.544483 47.52754, 83.63767300000001 47.782163, 83.731532 48.036729, 83.826104 48.291234, 83.921403 48.545678, 84.017442 48.80006, 84.11423600000001 49.054379, 84.2118 49.308634, 84.310148 49.562824, 84.409262 49.816951, 84.509182 50.071011, 84.609933 50.325004, 84.71153099999999 50.578928, 84.81399399999999 50.832781, 84.917338 51.086564, 85.021581 51.340274, 85.126724 51.593913, 85.232775 51.847479, 85.33978 52.100969, 85.447759 52.354382, 85.55673299999999 52.607717, 85.666721 52.860973, 85.777745 53.114147, 85.889827 53.36724, 86.00294 53.620252, 86.11715599999999 53.87318, 86.232497 54.126021, 86.348989 54.378774, 86.46665400000001 54.631436, 86.58552 54.884008, 86.705612 55.136487, 86.826928 55.388873, 86.94950300000001 55.641165, 87.073387 55.893359, 87.19860799999999 56.145453, 87.325198 56.397444, 87.453187 56.649331, 87.582607 56.901113, 87.713481 57.152787, 87.84580800000001 57.404355, 87.97966700000001 57.65581, 88.115093 57.90715, 88.25212399999999 58.158374, 88.39079700000001 58.409477, 88.531153 58.660459, 88.67323 58.911315, 88.817026 59.162049, 88.962616 59.412653, 89.110055 59.663125, 89.25939099999999 59.91346, 94.116896 59.067486))"
                            }
                        ]
                    }
                ],
                "name": "details"
            }
        ]

        isp_completeness_2 = self.session.query(Event).join(Gauge).filter(Gauge.name.like("PLANNED_IMAGING_ISP_COMPLETENESS_CHANNEL_%"),
                                                                                 Event.start == "2018-07-21T05:37:14.362833",
                                                                                 Event.stop == "2018-07-21T05:40:35.417601").all()

        assert len(isp_completeness_2) == 1

        # Check PLANNED_PLAYBACK_COMPLETENESS_CHANNEL events
        playback_completeness_events = self.session.query(Event).join(Gauge).filter(Gauge.name.like("PLANNED_PLAYBACK_COMPLETENESS_CHANNEL%")).all()

        assert len(playback_completeness_events) == 2

        # Check specific playback completeness
        playback_completeness_1 = self.session.query(Event).join(Gauge).filter(Gauge.name.like("PLANNED_PLAYBACK_COMPLETENESS_CHANNEL_%"),
                                                                                 Event.start == "2018-07-21T07:07:47",
                                                                                 Event.stop == "2018-07-21T07:25:07").all()

        assert len(playback_completeness_1) == 1

        assert playback_completeness_1[0].get_structured_values() == [
            {
                "type": "object",
                "values": [
                    {
                        "type": "text",
                        "value": "RECEIVED",
                        "name": "status"
                    },
                    {
                        "type": "double",
                        "value": "16076.0",
                        "name": "downlink_orbit"
                    },
                    {
                        "type": "text",
                        "value": "S2A",
                        "name": "satellite"
                    },
                    {
                        "type": "text",
                        "value": "EDRS",
                        "name": "reception_station"
                    },
                    {
                        "type": "double",
                        "value": "2.0",
                        "name": "channel"
                    },
                    {
                        "type": "double",
                        "value": "20.0",
                        "name": "vcid"
                    },
                    {
                        "type": "text",
                        "value": "NOMINAL",
                        "name": "downlink_mode"
                    },
                    {
                        "name": "footprint_details",
                        "type": "object",
                        "values": [
                            {
                                "name": "footprint",
                                "type": "geometry",
                                "value": "POLYGON ((60.126226 42.049647, 60.012327 41.744977, 59.899344 41.440207, 59.787259 41.13534, 59.676056 40.830377, 59.565716 40.52532, 59.456225 40.22017, 59.347564 39.914929, 59.23972 39.609598, 59.132677 39.304178, 59.026419 38.998672, 58.920932 38.693079, 58.816201 38.387403, 58.712213 38.081643, 58.608954 37.775801, 58.506411 37.469879, 58.404569 37.163877, 58.303417 36.857798, 58.202943 36.551641, 58.103132 36.245409, 58.003975 35.939102, 57.905454 35.632721, 57.807563 35.326268, 57.71029 35.019744, 57.613623 34.71315, 57.517553 34.406486, 57.422069 34.099754, 57.32716 33.792955, 57.232816 33.486089, 57.139028 33.179159, 57.045784 32.872164, 56.953076 32.565105, 56.860895 32.257985, 56.769231 31.950802, 56.678075 31.64356, 56.587418 31.336257, 56.497252 31.028896, 56.407568 30.721477, 56.318357 30.414, 56.229612 30.106468, 56.141325 29.79888, 56.053487 29.491237, 55.96609 29.183541, 55.879128 28.875792, 55.792592 28.56799, 55.706476 28.260137, 55.620771 27.952234, 55.535472 27.64428, 55.450567 27.336278, 55.366054 27.028227, 55.281926 26.720128, 55.198175 26.411983, 55.114796 26.103791, 55.031782 25.795554, 54.949127 25.487272, 54.866824 25.178946, 54.784867 24.870577, 54.703251 24.562165, 54.62197 24.25371, 54.541017 23.945215, 54.460388 23.636679, 54.380076 23.328102, 54.300076 23.019486, 54.220383 22.710832, 54.14099 22.402139, 54.061894 22.093409, 53.983089 21.784642, 53.904569 21.475839, 53.82633 21.167, 53.748367 20.858127, 53.670674 20.549218, 53.593247 20.240276, 53.516082 19.931301, 53.439173 19.622294, 53.362516 19.313254, 53.286105 19.004183, 53.209937 18.695081, 53.134007 18.385949, 53.058312 18.076787, 52.982847 17.767596, 52.907607 17.458377, 52.832589 17.149129, 52.757788 16.839855, 52.6832 16.530553, 52.608821 16.221225, 52.534647 15.911871, 52.460675 15.602493, 52.3869 15.293089, 52.313318 14.983662, 52.239926 14.674211, 52.16672 14.364737, 52.093697 14.05524, 52.020851 13.745722, 51.948181 13.436182, 51.875682 13.126621, 51.80335 12.81704, 51.731183 12.507439, 51.659176 12.197818, 51.587327 11.888179, 51.515632 11.578522, 51.444087 11.268847, 51.372689 10.959154, 51.301435 10.649445, 51.230321 10.33972, 51.159345 10.029979, 51.088503 9.720222, 51.017792 9.410451, 50.947209 9.100666, 50.87675 8.790867, 50.806413 8.481055, 50.736194 8.17123, 50.666091 7.861393, 50.5961 7.551544, 50.526218 7.241683, 50.456442 6.931812, 50.38677 6.621931, 50.317198 6.31204, 50.247724 6.00214, 50.178344 5.692231, 50.109055 5.382313, 50.039855 5.072388, 49.970741 4.762455, 49.901711 4.452515, 49.83276 4.142569, 49.763886 3.832617, 49.695087 3.522659, 49.62636 3.212697, 49.557702 2.902729, 49.48911 2.592758, 49.420582 2.282783, 49.352115 1.972805, 49.283706 1.662825, 49.215353 1.352842, 49.147052 1.042857, 49.078801 0.732872, 49.010597 0.422885, 48.942437 0.112898, 48.87432 -0.197089, 48.806241 -0.5070750000000001, 48.738199 -0.817061, 48.670191 -1.127045, 48.602213 -1.437026, 48.534265 -1.747006, 48.466342 -2.056983, 48.398442 -2.366956, 48.330562 -2.676926, 48.2627 -2.986891, 48.194854 -3.296852, 48.12702 -3.606807, 48.059195 -3.916758, 47.991378 -4.226702, 47.923566 -4.536639, 47.855755 -4.84657, 47.787943 -5.156494, 47.720128 -5.466409, 47.652308 -5.776317, 47.58448 -6.086216, 47.516641 -6.396105, 47.448787 -6.705985, 47.380917 -7.015855, 47.313028 -7.325715, 47.245116 -7.635564, 47.177179 -7.945401, 47.109214 -8.255227, 47.041219 -8.565041000000001, 46.973191 -8.874841999999999, 46.905127 -9.184628999999999, 46.837024 -9.494403999999999, 46.76888 -9.804164, 46.700691 -10.11391, 46.632455 -10.423642, 46.564169 -10.733358, 46.495831 -11.043058, 46.427436 -11.352742, 46.358983 -11.66241, 46.290469 -11.972061, 46.22189 -12.281694, 46.153244 -12.59131, 46.084528 -12.900907, 46.015738 -13.210486, 45.946872 -13.520045, 45.877927 -13.829585, 45.8089 -14.139105, 45.739791 -14.448604, 45.670593 -14.758083, 45.601304 -15.06754, 45.53192 -15.376976, 45.462439 -15.68639, 45.392856 -15.995781, 45.323169 -16.305149, 45.253374 -16.614493, 45.183469 -16.923814, 45.113449 -17.233111, 45.043312 -17.542382, 44.973054 -17.851629, 44.902671 -18.16085, 44.832161 -18.470045, 44.76152 -18.779214, 44.690743 -19.088356, 44.619828 -19.39747, 41.930074 -18.818118, 42.006176 -18.509497, 42.082044 -18.200839, 42.157681 -17.892145, 42.233093 -17.583414, 42.308283 -17.274648, 42.383256 -16.965847, 42.458014 -16.657012, 42.532564 -16.348143, 42.606908 -16.03924, 42.681051 -15.730305, 42.754995 -15.421338, 42.828747 -15.112339, 42.902308 -14.803309, 42.975683 -14.494248, 43.048876 -14.185157, 43.121889 -13.876036, 43.194728 -13.566886, 43.267396 -13.257708, 43.339895 -12.948501, 43.41223 -12.639267, 43.484404 -12.330006, 43.556421 -12.020718, 43.628283 -11.711405, 43.699995 -11.402065, 43.771558 -11.092701, 43.842978 -10.783312, 43.914257 -10.4739, 43.985399 -10.164463, 44.056406 -9.855003999999999, 44.127282 -9.545522, 44.19803 -9.236018, 44.268653 -8.926493000000001, 44.339154 -8.616946, 44.409537 -8.307378999999999, 44.479804 -7.997792, 44.549959 -7.688185, 44.620004 -7.378559, 44.689943 -7.068914, 44.759778 -6.759252, 44.829513 -6.449571, 44.89915 -6.139874, 44.968693 -5.830159, 45.038144 -5.520428, 45.107506 -5.210682, 45.176781 -4.90092, 45.245973 -4.591143, 45.315085 -4.281352, 45.38412 -3.971547, 45.453079 -3.661728, 45.521967 -3.351897, 45.590785 -3.042053, 45.659538 -2.732197, 45.728226 -2.422329, 45.796854 -2.112451, 45.865424 -1.802562, 45.933938 -1.492662, 46.0024 -1.182753, 46.070811 -0.872835, 46.139176 -0.562908, 46.207496 -0.252972, 46.275774 0.056971, 46.344013 0.366922, 46.412216 0.676879, 46.480385 0.9868440000000001, 46.548522 1.296814, 46.616632 1.60679, 46.684715 1.91677, 46.752776 2.226756, 46.820816 2.536746, 46.888838 2.846739, 46.956845 3.156736, 47.024838 3.466736, 47.092822 3.776738, 47.160797 4.086742, 47.228769 4.396748, 47.296738 4.706755, 47.364708 5.016762, 47.432682 5.32677, 47.500662 5.636777, 47.568651 5.946784, 47.636651 6.256789, 47.704666 6.566793, 47.772698 6.876794, 47.840749 7.186793, 47.908823 7.496789, 47.976922 7.806782, 48.045049 8.116771, 48.113206 8.426755, 48.181397 8.736734999999999, 48.249624 9.046709999999999, 48.31789 9.356678, 48.386197 9.666641, 48.45455 9.976597999999999, 48.522949 10.286547, 48.591399 10.596489, 48.659903 10.906423, 48.728462 11.216348, 48.79708 11.526265, 48.865756 11.836173, 48.934498 12.146071, 49.003306 12.45596, 49.072186 12.765838, 49.141139 13.075704, 49.210168 13.38556, 49.279277 13.695403, 49.348469 14.005234, 49.417746 14.315053, 49.487113 14.624858, 49.556571 14.93465, 49.626124 15.244428, 49.695776 15.554191, 49.765529 15.863939, 49.835387 16.173672, 49.905354 16.483389, 49.975431 16.79309, 50.045623 17.102774, 50.115934 17.412441, 50.186366 17.72209, 50.256922 18.031721, 50.327608 18.341334, 50.398425 18.650928, 50.469378 18.960502, 50.54047 19.270057, 50.611705 19.579591, 50.683086 19.889104, 50.754613 20.198597, 50.826294 20.508068, 50.898132 20.817516, 50.970132 21.126943, 51.042297 21.436346, 51.114632 21.745726, 51.187141 22.055081, 51.259827 22.364413, 51.332694 22.673719, 51.405747 22.983001, 51.478991 23.292256, 51.552429 23.601485, 51.626065 23.910688, 51.699905 24.219863, 51.773952 24.529011, 51.848211 24.838131, 51.922688 25.147222, 51.997385 25.456284, 52.072309 25.765316, 52.147464 26.074318, 52.222855 26.38329, 52.298487 26.692231, 52.374365 27.00114, 52.450494 27.310018, 52.526879 27.618863, 52.603526 27.927674, 52.68044 28.236453, 52.757621 28.545198, 52.83508 28.853908, 52.912822 29.162583, 52.990854 29.471223, 53.069181 29.779827, 53.14781 30.088394, 53.226746 30.396924, 53.305996 30.705416, 53.385565 31.01387, 53.465461 31.322286, 53.545689 31.630662, 53.626258 31.938999, 53.707172 32.247295, 53.78844 32.55555, 53.870068 32.863764, 53.952063 33.171935, 54.034433 33.480064, 54.117185 33.78815, 54.200327 34.096192, 54.283867 34.404189, 54.367812 34.712142, 54.452171 35.020048, 54.536951 35.327909, 54.622161 35.635722, 54.707811 35.943488, 54.793908 36.251206, 54.88046 36.558875, 54.967471 36.866494, 55.054957 37.174064, 55.142927 37.481582, 55.231391 37.789049, 55.320359 38.096464, 55.409842 38.403825, 55.499848 38.711133, 55.59039 39.018386, 55.681478 39.325584, 55.773123 39.632726, 55.865337 39.939811, 55.95813 40.246839, 56.051516 40.553807, 56.145505 40.860717, 56.240112 41.167566, 56.335348 41.474355, 56.431226 41.781081, 56.52776 42.087745, 56.624964 42.394345, 56.722851 42.700881, 60.126226 42.049647))"
                            }
                        ]
                    }
                ],
                "name": "details"
            }
        ]

        # Check specific playback completeness
        playback_completeness_2 = self.session.query(Event).join(Gauge).filter(Gauge.name.like("PLANNED_PLAYBACK_COMPLETENESS_CHANNEL_%"),
                                                                                 Event.start == "2018-07-21T07:25:18",
                                                                                 Event.stop == "2018-07-21T07:25:18").all()

        assert len(playback_completeness_2) == 1

        assert playback_completeness_2[0].get_structured_values() == [
            {
                "type": "object",
                "values": [
                    {
                        "type": "text",
                        "value": "RECEIVED",
                        "name": "status"
                    },
                    {
                        "type": "double",
                        "value": "16076.0",
                        "name": "downlink_orbit"
                    },
                    {
                        "type": "text",
                        "value": "S2A",
                        "name": "satellite"
                    },
                    {
                        "type": "text",
                        "value": "EDRS",
                        "name": "reception_station"
                    },
                    {
                        "type": "double",
                        "value": "2.0",
                        "name": "channel"
                    },
                    {
                        "type": "double",
                        "value": "2.0",
                        "name": "vcid"
                    },
                    {
                        "type": "text",
                        "value": "SAD",
                        "name": "downlink_mode"
                    },
                    {
                        "name": "footprint_details",
                        "type": "object",
                        "values": [
                            {
                                "name": "footprint",
                                "type": "geometry",
                                "value": "POLYGON ((44.470094 -20.048006, 41.769106 -19.467582, 41.769106 -19.467582, 44.470094 -20.048006))"
                            }
                        ]
                    }
                ],
                "name": "details"
            }
        ]
        
    def test_insert_rep_pass_playback_rt_with_plan(self):

        filename = "S2A_NPPF_PLAYBACK_RT.EOF"
        file_path = os.path.dirname(os.path.abspath(__file__)) + "/inputs/" + filename

        returned_value = ingestion.command_process_file("s2boa.ingestions.ingestion_nppf.ingestion_nppf", file_path)

        assert returned_value[0]["status"] == eboa_engine.exit_codes["OK"]["status"]

        filename = "S2A_ORBPRE.EOF"
        file_path = os.path.dirname(os.path.abspath(__file__)) + "/inputs/" + filename

        returned_value = ingestion.command_process_file("s2boa.ingestions.ingestion_orbpre.ingestion_orbpre", file_path)

        assert returned_value[0]["status"] == eboa_engine.exit_codes["OK"]["status"]

        filename = "S2__SRA.EOF"
        file_path = os.path.dirname(os.path.abspath(__file__)) + "/inputs/" + filename

        returned_value = ingestion.command_process_file("s2boa.ingestions.ingestion_slot_request_edrs.ingestion_slot_request_edrs", file_path)

        assert returned_value[0]["status"] == eboa_engine.exit_codes["OK"]["status"]


        filename = "S2A_OPER_REP_PASS_E_PLAYBACK_RT.EOF"
        file_path = os.path.dirname(os.path.abspath(__file__)) + "/inputs/" + filename

        returned_value = ingestion.command_process_file("s2boa.ingestions.ingestion_edrs_acquisition.ingestion_edrs_acquisition", file_path)

        assert returned_value[0]["status"] == eboa_engine.exit_codes["OK"]["status"]
        assert returned_value[1]["status"] == eboa_engine.exit_codes["OK"]["status"]

        # Check sources
        source = self.session.query(Source).filter(Source.validity_start == "2018-07-20T17:33:12.859268",
                                                   Source.validity_stop == "2018-07-21T07:37:55.121811",
                                                   Source.name == "S2A_OPER_REP_PASS_E_PLAYBACK_RT.EOF",
                                                   Source.processor == "ingestion_edrs_acquisition.py").all()

        assert len(source) == 1

        source = self.session.query(Source).filter(Source.validity_start == "2018-07-21T05:16:48.773036",
                                                   Source.validity_stop == "2018-07-21T05:40:35.417601",
                                                   Source.name == "S2A_OPER_REP_PASS_E_PLAYBACK_RT.EOF",
                                                   Source.processor == "isp_planning_completeness_ingestion_edrs_acquisition.py").all()

        assert len(source) == 1

        # Check number of events generated
        events = self.session.query(Event).join(Source).filter(Source.name == "S2A_OPER_REP_PASS_E_PLAYBACK_RT.EOF").all()

        assert len(events) == 10

        # Check PLANNED_IMAGING_ISP_COMPLETENESS_CHANNEL events
        isp_completeness_events = self.session.query(Event).join(Gauge).filter(Gauge.name.like("PLANNED_IMAGING_ISP_COMPLETENESS_CHANNEL%")).all()

        assert len(isp_completeness_events) == 3

        # Check definite ISP completeness
        isp_completeness_missing_left = self.session.query(Event).join(Gauge).filter(Gauge.name.like("PLANNED_IMAGING_ISP_COMPLETENESS_CHANNEL_%"),
                                                                                 Event.start == "2018-07-21T05:16:48.773036",
                                                                                 Event.stop == "2018-07-21T05:22:08.947423").all()

        assert len(isp_completeness_missing_left) == 1

        assert isp_completeness_missing_left[0].get_structured_values() == [
            {
                "type": "object",
                "values": [
                    {
                        "type": "text",
                        "value": "MPMSNOBS",
                        "name": "start_request"
                    },
                    {
                        "type": "text",
                        "value": "MPMSIMID",
                        "name": "stop_request"
                    },
                    {
                        "type": "double",
                        "value": "16075.0",
                        "name": "start_orbit"
                    },
                    {
                        "type": "double",
                        "value": "100.3083",
                        "name": "start_angle"
                    },
                    {
                        "type": "double",
                        "value": "16075.0",
                        "name": "stop_orbit"
                    },
                    {
                        "type": "double",
                        "value": "171.1847",
                        "name": "stop_angle"
                    },
                    {
                        "type": "text",
                        "value": "S2A",
                        "name": "satellite"
                    },
                    {
                        "type": "text",
                        "value": "NOMINAL",
                        "name": "record_type"
                    },
                    {
                        "type": "text",
                        "value": "NOMINAL",
                        "name": "imaging_mode"
                    },
                    {
                        "type": "object",
                        "values": [
                            {
                                "type": "double",
                                "value": "0.0",
                                "name": "start_scn_dup"
                            }
                        ],
                        "name": "parameters"
                    },
                    {
                        "type": "text",
                        "value": "TIME_CORRECTED",
                        "name": "status_correction"
                    },
                    {
                        "type": "double",
                        "value": "-5.365036",
                        "name": "delta_start"
                    },
                    {
                        "type": "double",
                        "value": "-5.12251",
                        "name": "delta_stop"
                    },
                    {
                        "name": "footprint_details",
                        "type": "object",
                        "values": [
                            {
                                "name": "footprint",
                                "type": "geometry",
                                "value": "POLYGON ((121.349247 75.73432, 120.347686 75.475886, 119.379921 75.21351, 118.444672 74.94739300000001, 117.540668 74.677729, 116.666671 74.404701, 115.821434 74.128491, 115.003774 73.84926400000001, 114.212619 73.567162, 113.446876 73.282329, 112.705494 72.99490299999999, 111.987463 72.705011, 111.291723 72.412791, 110.617434 72.118341, 109.963705 71.82176699999999, 109.329684 71.523171, 108.714553 71.222649, 108.117483 70.920299, 107.537744 70.616204, 106.974659 70.31043699999999, 106.42755 70.003074, 105.895767 69.694188, 105.378682 69.383847, 104.875645 69.072124, 104.386166 68.75906999999999, 103.909705 68.444739, 103.445751 68.129188, 102.993814 67.812466, 102.553376 67.494631, 102.124023 67.175724, 101.705354 66.855785, 101.296963 66.534854, 100.898463 66.21297199999999, 100.509464 65.89017800000001, 100.129585 65.566512, 99.75854 65.242001, 99.396006 64.916676, 99.04167700000001 64.59056699999999, 98.695257 64.263704, 98.35641 63.936122, 98.02491499999999 63.60784, 97.700524 63.278882, 97.382992 62.949272, 97.072081 62.619032, 96.76754 62.288188, 96.46914599999999 61.956762, 96.176727 61.624768, 95.890084 61.292225, 95.609027 60.959151, 95.33337299999999 60.625564, 95.06289200000001 60.291488, 94.797472 59.95693, 94.536952 59.621906, 94.28117899999999 59.286429, 94.030002 58.950515, 93.783249 58.61418, 93.540791 58.277436, 93.30252 57.940292, 93.068308 57.60276, 92.838033 57.264851, 92.61157 56.926577, 92.388772 56.587952, 92.169573 56.248981, 91.953868 55.909674, 91.741556 55.57004, 91.53254 55.230087, 91.32669199999999 54.889829, 91.12394500000001 54.549271, 90.924222 54.208419, 90.727441 53.867281, 90.533519 53.525865, 90.342366 53.184178, 90.15389 52.84223, 89.968047 52.500023, 89.784767 52.157565, 89.603982 51.814861, 89.42562599999999 51.471917, 89.249601 51.128742, 89.075875 50.78534, 88.904393 50.441714, 88.73509900000001 50.09787, 88.567936 49.753813, 88.402834 49.409549, 88.23973700000001 49.065084, 88.078614 48.720419, 87.91941799999999 48.37556, 87.7621 48.03051, 87.60661399999999 47.685274, 87.452881 47.339859, 87.300894 46.994265, 87.150609 46.648497, 87.001987 46.302557, 86.85498699999999 45.95645, 86.709553 45.61018, 86.565653 45.263751, 86.423265 44.917164, 86.282353 44.570422, 86.142884 44.223529, 86.004818 43.876488, 85.868105 43.529303, 85.732738 43.181976, 85.598687 42.834509, 85.46592200000001 42.486904, 85.33441500000001 42.139164, 85.204117 41.791294, 85.075014 41.443295, 84.947087 41.095168, 84.820311 40.746917, 84.69466 40.398542, 84.57010200000001 40.050048, 84.44660399999999 39.701437, 84.32416000000001 39.352709, 84.202748 39.003867, 84.082346 38.654914, 83.962932 38.30585, 83.844465 37.956679, 83.72694199999999 37.607402, 83.610347 37.258021, 83.49466 36.908537, 83.379862 36.558952, 83.265925 36.209269, 83.15282999999999 35.859489, 83.04057 35.509614, 82.92912800000001 35.159644, 82.818488 34.809582, 82.70863300000001 34.459429, 82.59952699999999 34.109187, 82.491176 33.758858, 82.383563 33.408442, 82.276675 33.057942, 82.170495 32.707358, 82.065 32.356692, 81.960179 32.005946, 81.856025 31.655121, 81.752526 31.304217, 81.649669 30.953237, 81.547437 30.602182, 81.445808 30.251053, 81.34478300000001 29.899851, 81.24435 29.548578, 81.144498 29.197234, 81.045215 28.845821, 80.946479 28.49434, 80.848286 28.142793, 80.75063 27.79118, 80.653499 27.439502, 80.556884 27.087761, 80.46077 26.735957, 80.36514200000001 26.384092, 80.27 26.032168, 80.17533400000001 25.680184, 80.081135 25.328142, 79.987393 24.976042, 79.89409000000001 24.623888, 79.801225 24.271678, 79.70879100000001 23.919414, 79.61678000000001 23.567096, 79.525183 23.214727, 79.433988 22.862307, 79.34318500000001 22.509837, 79.25277199999999 22.157318, 79.162741 21.80475, 79.07308399999999 21.452135, 78.983795 21.099474, 78.894856 20.746767, 78.80627 20.394016, 78.718029 20.041221, 78.630126 19.688383, 78.54255499999999 19.335504, 78.455303 18.982583, 78.36836599999999 18.629623, 78.28174 18.276623, 78.195418 17.923584, 78.10939399999999 17.570508, 78.023661 17.217396, 77.938209 16.864247, 77.853036 16.511063, 77.768137 16.157846, 77.683504 15.804594, 77.59913299999999 15.451311, 77.51501500000001 15.097995, 77.431145 14.744649, 77.34751900000001 14.391272, 77.264132 14.037866, 77.180978 13.684431, 77.098051 13.330969, 77.015344 12.977479, 76.93285400000001 12.623964, 76.850576 12.270423, 76.76850399999999 11.916857, 76.686634 11.563267, 76.604958 11.209655, 76.52347399999999 10.856019, 76.442176 10.502363, 76.361059 10.148685, 76.280119 9.794987000000001, 76.19935099999999 9.441269999999999, 76.11874899999999 9.087535000000001, 76.03831 8.733781, 75.958029 8.38001, 73.40189700000001 8.945615999999999, 73.47983499999999 9.299562999999999, 73.55783 9.653503000000001, 73.635885 10.007434, 73.71399700000001 10.361356, 73.792171 10.715268, 73.870418 11.06917, 73.94874299999999 11.423061, 74.02715000000001 11.776939, 74.10564100000001 12.130805, 74.184209 12.484659, 74.262873 12.838499, 74.341635 13.192324, 74.420503 13.546134, 74.49947899999999 13.899928, 74.57855600000001 14.253706, 74.657747 14.607468, 74.73706 14.961211, 74.8165 15.314936, 74.896073 15.668641, 74.975779 16.022327, 75.05561299999999 16.375994, 75.135593 16.729639, 75.215726 17.083262, 75.29601599999999 17.436862, 75.376468 17.79044, 75.457071 18.143994, 75.537843 18.497524, 75.618792 18.851029, 75.699926 19.204508, 75.78124800000001 19.557961, 75.862756 19.911387, 75.94445 20.264785, 76.02635100000001 20.618155, 76.108462 20.971496, 76.190791 21.324807, 76.273343 21.678087, 76.356101 22.031337, 76.439094 22.384556, 76.522328 22.737741, 76.60581000000001 23.090893, 76.689547 23.444011, 76.77352999999999 23.797096, 76.85776799999999 24.150145, 76.94228099999999 24.503158, 77.027074 24.856135, 77.112155 25.209073, 77.19752699999999 25.561974, 77.28317800000001 25.914837, 77.36913699999999 26.26766, 77.45541299999999 26.620443, 77.542013 26.973185, 77.628945 27.325884, 77.716196 27.678542, 77.803786 28.031158, 77.891732 28.383729, 77.980041 28.736255, 78.068724 29.088735, 78.157779 29.44117, 78.247201 29.793558, 78.337022 30.145899, 78.427251 30.49819, 78.51789599999999 30.850433, 78.608969 31.202624, 78.700451 31.554766, 78.792374 31.906856, 78.884753 32.258894, 78.977599 32.610877, 79.070922 32.962806, 79.16471900000001 33.314681, 79.258995 33.6665, 79.353781 34.018262, 79.449089 34.369966, 79.54493100000001 34.721611, 79.641319 35.073196, 79.738229 35.424722, 79.83570899999999 35.776186, 79.933773 36.127588, 80.032433 36.478926, 80.131705 36.830199, 80.231579 37.181407, 80.332075 37.53255, 80.433223 37.883625, 80.53504 38.234631, 80.637541 38.585567, 80.740736 38.936432, 80.84461 39.287227, 80.949215 39.637948, 81.05457 39.988595, 81.160691 40.339166, 81.267596 40.689661, 81.375274 41.040078, 81.48375900000001 41.390417, 81.593085 41.740676, 81.703271 42.090852, 81.814339 42.440944, 81.92629700000001 42.790952, 82.03914399999999 43.140876, 82.15293699999999 43.490712, 82.26769899999999 43.840459, 82.383453 44.190115, 82.500224 44.539678, 82.61799499999999 44.88915, 82.736825 45.238526, 82.85674899999999 45.587805, 82.97779300000001 45.936985, 83.099987 46.286064, 83.223336 46.635041, 83.34786200000001 46.983915, 83.47362699999999 47.332683, 83.600661 47.681341, 83.728998 48.029889, 83.858672 48.378323, 83.989662 48.726646, 84.122058 49.074852, 84.255899 49.422937, 84.391222 49.7709, 84.528068 50.118738, 84.666445 50.466451, 84.80640099999999 50.814035, 84.948007 51.161487, 85.091307 51.508802, 85.23635 51.855978, 85.38317600000001 52.203013, 85.53178800000001 52.549908, 85.682293 52.896653, 85.834745 53.243247, 85.9892 53.589685, 86.145717 53.935964, 86.304309 54.282083, 86.465064 54.628038, 86.628068 54.973821, 86.79338799999999 55.319429, 86.961094 55.664856, 87.13124000000001 56.010101, 87.30386900000001 56.355162, 87.47911000000001 56.700027, 87.657045 57.044694, 87.83776 57.389155, 88.021343 57.733405, 88.20782199999999 58.077445, 88.397345 58.421263, 88.590023 58.764852, 88.785962 59.108205, 88.985269 59.451315, 89.188025 59.794178, 89.394334 60.136787, 89.604366 60.479131, 89.818251 60.8212, 90.036125 61.162987, 90.258127 61.50448, 90.48432099999999 61.845681, 90.71494300000001 62.18657, 90.950158 62.527136, 91.190135 62.867368, 91.435051 63.207255, 91.685041 63.54679, 91.940309 63.885958, 92.20110200000001 64.224743, 92.467635 64.563129, 92.740135 64.901101, 93.018824 65.238646, 93.30388000000001 65.575754, 93.595651 65.912398, 93.894413 66.24856, 94.200459 66.584221, 94.51409700000001 66.919358, 94.835571 67.25395899999999, 95.165269 67.587997, 95.50358300000001 67.921441, 95.850892 68.254267, 96.207601 68.58644700000001, 96.574102 68.91795500000001, 96.95079200000001 69.24876500000001, 97.338232 69.578836, 97.73692699999999 69.908131, 98.14741100000001 70.236614, 98.57025299999999 70.564243, 99.005945 70.890989, 99.455214 71.216797, 99.918757 71.54161499999999, 100.397295 71.865392, 100.891594 72.18807, 101.402411 72.50960000000001, 101.93059 72.82991800000001, 102.477134 73.148948, 103.043026 73.466615, 103.629314 73.782842, 104.237114 74.097542, 104.867465 74.410645, 105.521783 74.722032, 106.20142 75.0316, 106.907818 75.339232, 107.642515 75.64480500000001, 108.407055 75.948201, 109.203203 76.24927099999999, 110.032887 76.54785099999999, 110.898082 76.843772, 111.800889 77.136853, 112.743512 77.42689900000001, 121.349247 75.73432))"
                            }
                        ]
                    },
                    {
                        "type": "text",
                        "value": "MISSING",
                        "name": "status"
                    }
                ],
                "name": "details"
            }                    
        ]
        
        isp_completeness_statuses = [event for event in isp_completeness_missing_left if len([value for value in event.eventTexts if value.name == "status" and value.value == "MISSING"]) > 0]

        assert len(isp_completeness_statuses) == 1

        # Check number of annotations generated
        annotations = self.session.query(Annotation).join(Source).filter(Source.name == "S2A_OPER_REP_PASS_E_PLAYBACK_RT.EOF").all()

        assert len(annotations) == 1

        # Check specific ISP completeness
        isp_completeness_1 = self.session.query(Event).join(Gauge).filter(Gauge.name.like("PLANNED_IMAGING_ISP_COMPLETENESS_CHANNEL_%"),
                                                                                 Event.start == "2018-07-21T05:22:08.947423",
                                                                                 Event.stop == "2018-07-21T05:36:36.329510").all()

        assert len(isp_completeness_1) == 1

        assert isp_completeness_1[0].get_structured_values() == [
            {
                "type": "object",
                "values": [
                    {
                        "type": "text",
                        "value": "RECEIVED",
                        "name": "status"
                    },
                    {
                        "type": "double",
                        "value": "16076.0",
                        "name": "downlink_orbit"
                    },
                    {
                        "type": "text",
                        "value": "S2A",
                        "name": "satellite"
                    },
                    {
                        "type": "text",
                        "value": "EDRS",
                        "name": "reception_station"
                    },
                    {
                        "type": "double",
                        "value": "2.0",
                        "name": "channel"
                    },
                    {
                        "type": "double",
                        "value": "22.0",
                        "name": "vcid"
                    },
                    {
                        "type": "text",
                        "value": "RT",
                        "name": "downlink_mode"
                    },
                    {
                        "type": "text",
                        "value": "16075.0",
                        "name": "sensing_orbit"
                    },
                    {
                        "name": "footprint_details",
                        "type": "object",
                        "values": [
                            {
                                "name": "footprint",
                                "type": "geometry",
                                "value": "POLYGON ((94.116896 59.067486, 93.93512200000001 58.821977, 93.755695 58.576244, 93.578564 58.330292, 93.403667 58.084127, 93.230935 57.837756, 93.060349 57.59118, 92.89186100000001 57.344402, 92.725425 57.097428, 92.560997 56.850262, 92.398534 56.602906, 92.23799200000001 56.355367, 92.079302 56.107649, 91.92244700000001 55.859755, 91.76739499999999 55.611688, 91.614107 55.36345, 91.462547 55.115045, 91.312679 54.866476, 91.164468 54.617746, 91.017866 54.368861, 90.872834 54.119824, 90.72936 53.870635, 90.587412 53.621297, 90.44696 53.371813, 90.307974 53.122186, 90.170424 52.872419, 90.03428099999999 52.622513, 89.899489 52.372476, 89.766051 52.122305, 89.63394 51.872003, 89.503131 51.621573, 89.373598 51.371016, 89.245318 51.120336, 89.11826499999999 50.869533, 88.992401 50.618613, 88.867707 50.367576, 88.744174 50.116423, 88.62178 49.865157, 88.50050400000001 49.613778, 88.380324 49.36229, 88.26122100000001 49.110692, 88.143169 48.858989, 88.026134 48.607184, 87.910118 48.355275, 87.795102 48.103265, 87.68107000000001 47.851154, 87.56800200000001 47.598946, 87.455883 47.34664, 87.344694 47.09424, 87.23440100000001 46.841747, 87.125001 46.589163, 87.016485 46.336487, 86.90883700000001 46.083722, 86.802041 45.830869, 86.696083 45.577928, 86.59094899999999 45.324902, 86.486616 45.071793, 86.383064 44.818601, 86.280295 44.565328, 86.17829500000001 44.311974, 86.077051 44.05854, 85.976551 43.805027, 85.876783 43.551438, 85.777733 43.297772, 85.67936899999999 43.044033, 85.581701 42.790219, 85.484717 42.536333, 85.388406 42.282374, 85.29275699999999 42.028344, 85.19776 41.774245, 85.103403 41.520076, 85.009666 41.265839, 84.91654 41.011536, 84.82402500000001 40.757167, 84.732111 40.502732, 84.640788 40.248232, 84.55004700000001 39.993669, 84.459878 39.739043, 84.37027 39.484355, 84.28120199999999 39.229606, 84.19268 38.974797, 84.104696 38.719929, 84.017242 38.465001, 83.930308 38.210015, 83.84388800000001 37.954972, 83.75797300000001 37.699872, 83.67254200000001 37.444717, 83.587598 37.189507, 83.503136 36.934243, 83.419149 36.678924, 83.33563100000001 36.423553, 83.252573 36.168129, 83.16996899999999 35.912653, 83.087807 35.657126, 83.006074 35.401549, 82.92477599999999 35.145922, 82.843906 34.890246, 82.76345600000001 34.634522, 82.683421 34.378749, 82.60379399999999 34.122928, 82.52457 33.867061, 82.445729 33.611148, 82.367278 33.35519, 82.28921200000001 33.099186, 82.21152600000001 32.843138, 82.134213 32.587045, 82.05726799999999 32.330909, 81.98068600000001 32.07473, 81.904455 31.818509, 81.82857 31.562246, 81.753033 31.305942, 81.67783799999999 31.049596, 81.60298 30.793211, 81.52845499999999 30.536785, 81.454257 30.28032, 81.38038 30.023817, 81.30681199999999 29.767275, 81.233557 29.510695, 81.160611 29.254078, 81.08797 28.997423, 81.015629 28.740732, 80.943584 28.484005, 80.87183 28.227242, 80.80035599999999 27.970445, 80.729163 27.713613, 80.658249 27.456746, 80.58761 27.199845, 80.51724299999999 26.942911, 80.447143 26.685944, 80.377306 26.428944, 80.307726 26.171913, 80.23839599999999 25.914849, 80.169319 25.657754, 80.10048999999999 25.400629, 80.03190600000001 25.143472, 79.96356400000001 24.886286, 79.89546 24.62907, 79.82759 24.371824, 79.759944 24.114549, 79.692526 23.857246, 79.625332 23.599915, 79.55835999999999 23.342556, 79.491606 23.08517, 79.425067 22.827756, 79.358739 22.570316, 79.29261700000001 22.312849, 79.226697 22.055357, 79.16098 21.797839, 79.095463 21.540296, 79.030142 21.282727, 78.96501499999999 21.025135, 78.90008 20.767518, 78.835331 20.509877, 78.770763 20.252213, 78.706377 19.994526, 78.642171 19.736817, 78.578143 19.479084, 78.51428900000001 19.22133, 78.45060700000001 18.963554, 78.38709299999999 18.705756, 78.32374299999999 18.447938, 78.26055599999999 18.190099, 78.19753 17.932239, 78.134664 17.67436, 78.07195400000001 17.41646, 78.009398 17.158541, 77.946994 16.900604, 77.884738 16.642647, 77.822626 16.384672, 77.760659 16.126679, 77.698835 15.868668, 77.63715000000001 15.61064, 77.575603 15.352594, 77.514191 15.094532, 77.452913 14.836453, 77.391763 14.578358, 77.330742 14.320248, 77.269848 14.062121, 77.20907800000001 13.803979, 77.14843 13.545823, 77.087903 13.287651, 77.027494 13.029466, 76.96720000000001 12.771266, 76.90701900000001 12.513052, 76.846951 12.254825, 76.786993 11.996585, 76.727142 11.738332, 76.66739800000001 11.480067, 76.607758 11.221789, 76.548219 10.9635, 76.48878000000001 10.705198, 76.42944 10.446886, 76.37019600000001 10.188562, 76.311046 9.930227, 76.25198899999999 9.671882, 76.193023 9.413527, 76.134146 9.155162000000001, 76.075355 8.896787, 76.01665 8.638403, 75.958029 8.38001, 73.40189700000001 8.945615999999999, 73.45882 9.204136999999999, 73.515772 9.462654000000001, 73.57275300000001 9.721166, 73.629758 9.979675, 73.686798 10.238179, 73.74387400000001 10.496677, 73.800988 10.75517, 73.858141 11.013657, 73.915335 11.272138, 73.972572 11.530613, 74.029843 11.789083, 74.087159 12.047545, 74.14452300000001 12.306001, 74.201936 12.564449, 74.259401 12.82289, 74.316919 13.081322, 74.37449100000001 13.339747, 74.432115 13.598164, 74.48979 13.856573, 74.547526 14.114973, 74.605324 14.373364, 74.663185 14.631746, 74.72111200000001 14.890118, 74.779107 15.14848, 74.83717 15.406832, 74.895293 15.665175, 74.95348799999999 15.923507, 75.011758 16.181828, 75.070105 16.440138, 75.12853200000001 16.698437, 75.187039 16.956724, 75.24562899999999 17.214999, 75.304294 17.473262, 75.363041 17.731514, 75.42187699999999 17.989752, 75.48080400000001 18.247978, 75.539824 18.506191, 75.598939 18.76439, 75.658152 19.022575, 75.71745900000001 19.280747, 75.776856 19.538905, 75.83635700000001 19.797048, 75.89596299999999 20.055177, 75.95567699999999 20.313291, 76.015502 20.571389, 76.075439 20.829472, 76.13549 21.087539, 76.195644 21.345591, 76.255915 21.603626, 76.31630699999999 21.861645, 76.376823 22.119647, 76.437466 22.377632, 76.498237 22.6356, 76.55914 22.89355, 76.620167 23.151482, 76.68132199999999 23.409396, 76.742615 23.667292, 76.80404900000001 23.92517, 76.865627 24.183028, 76.927351 24.440867, 76.989225 24.698686, 77.051249 24.956486, 77.11341 25.214266, 77.17572699999999 25.472026, 77.23820499999999 25.729765, 77.30084600000001 25.987484, 77.363652 26.245181, 77.426627 26.502856, 77.489774 26.76051, 77.55308100000001 27.018142, 77.616559 27.275752, 77.680218 27.533339, 77.74406 27.790904, 77.808089 28.048445, 77.87230700000001 28.305963, 77.93671999999999 28.563456, 78.001323 28.820926, 78.066109 29.078373, 78.13109900000001 29.335794, 78.19629399999999 29.593191, 78.2617 29.850562, 78.32732 30.107907, 78.393156 30.365227, 78.459214 30.62252, 78.525475 30.879787, 78.591962 31.137028, 78.65868 31.394242, 78.725633 31.651428, 78.79282600000001 31.908586, 78.860263 32.165716, 78.927948 32.422818, 78.995873 32.679891, 79.06404000000001 32.936936, 79.13246700000001 33.193951, 79.20115800000001 33.450936, 79.270117 33.707891, 79.33935 33.964816, 79.40886 34.221709, 79.478652 34.478572, 79.548705 34.735404, 79.619049 34.992204, 79.689689 35.248972, 79.760631 35.505707, 79.831878 35.762409, 79.903437 36.019078, 79.975312 36.275713, 80.04749099999999 36.532314, 80.11998699999999 36.788881, 80.192814 37.045414, 80.26598 37.301911, 80.339489 37.558372, 80.413347 37.814797, 80.48756 38.071185, 80.562127 38.327536, 80.637038 38.583852, 80.712322 38.840129, 80.78798500000001 39.096368, 80.864034 39.352569, 80.94047500000001 39.60873, 81.017314 39.864851, 81.09456 40.120932, 81.172192 40.376974, 81.250238 40.632975, 81.32871 40.888934, 81.407616 41.144851, 81.486963 41.400726, 81.566759 41.656557, 81.647012 41.912345, 81.727715 42.16809, 81.80887199999999 42.423791, 81.89050899999999 42.679446, 81.972635 42.935056, 82.05525799999999 43.190619, 82.13838800000001 43.446136, 82.22203399999999 43.701605, 82.306203 43.957025, 82.390872 44.212399, 82.476083 44.467724, 82.561847 44.722999, 82.648173 44.978223, 82.735073 45.233395, 82.82255600000001 45.488516, 82.910633 45.743584, 82.999291 45.9986, 83.08855 46.253563, 83.178436 46.508471, 83.26896000000001 46.763324, 83.360135 47.01812, 83.451971 47.272859, 83.544483 47.52754, 83.63767300000001 47.782163, 83.731532 48.036729, 83.826104 48.291234, 83.921403 48.545678, 84.017442 48.80006, 84.11423600000001 49.054379, 84.2118 49.308634, 84.310148 49.562824, 84.409262 49.816951, 84.509182 50.071011, 84.609933 50.325004, 84.71153099999999 50.578928, 84.81399399999999 50.832781, 84.917338 51.086564, 85.021581 51.340274, 85.126724 51.593913, 85.232775 51.847479, 85.33978 52.100969, 85.447759 52.354382, 85.55673299999999 52.607717, 85.666721 52.860973, 85.777745 53.114147, 85.889827 53.36724, 86.00294 53.620252, 86.11715599999999 53.87318, 86.232497 54.126021, 86.348989 54.378774, 86.46665400000001 54.631436, 86.58552 54.884008, 86.705612 55.136487, 86.826928 55.388873, 86.94950300000001 55.641165, 87.073387 55.893359, 87.19860799999999 56.145453, 87.325198 56.397444, 87.453187 56.649331, 87.582607 56.901113, 87.713481 57.152787, 87.84580800000001 57.404355, 87.97966700000001 57.65581, 88.115093 57.90715, 88.25212399999999 58.158374, 88.39079700000001 58.409477, 88.531153 58.660459, 88.67323 58.911315, 88.817026 59.162049, 88.962616 59.412653, 89.110055 59.663125, 89.25939099999999 59.91346, 94.116896 59.067486))"
                            }
                        ]
                    }
                ],
                "name": "details"
            }
        ]

        isp_completeness_2 = self.session.query(Event).join(Gauge).filter(Gauge.name.like("PLANNED_IMAGING_ISP_COMPLETENESS_CHANNEL_%"),
                                                                                 Event.start == "2018-07-21T05:37:14.362833",
                                                                                 Event.stop == "2018-07-21T05:40:35.417601").all()

        assert len(isp_completeness_2) == 1

        # Check PLANNED_PLAYBACK_COMPLETENESS_CHANNEL events
        playback_completeness_events = self.session.query(Event).join(Gauge).filter(Gauge.name.like("PLANNED_PLAYBACK_COMPLETENESS_CHANNEL%")).all()

        assert len(playback_completeness_events) == 2

        # Check PLANNED_PLAYBACK_COMPLETENESS_CHANNEL events
        playback_completeness_events = self.session.query(Event).join(Gauge).filter(Gauge.name.like("PLANNED_PLAYBACK_COMPLETENESS_CHANNEL%")).all()

        assert len(playback_completeness_events) == 2

        # Check specific playback completeness
        playback_completeness_1 = self.session.query(Event).join(Gauge).filter(Gauge.name.like("PLANNED_PLAYBACK_COMPLETENESS_CHANNEL_%"),
                                                                                 Event.start == "2018-07-21T07:07:47",
                                                                                 Event.stop == "2018-07-21T07:25:07").all()

        assert len(playback_completeness_1) == 1

        assert playback_completeness_1[0].get_structured_values() == [
            {
                "type": "object",
                "values": [
                    {
                        "type": "text",
                        "value": "RECEIVED",
                        "name": "status"
                    },
                    {
                        "type": "double",
                        "value": "16076.0",
                        "name": "downlink_orbit"
                    },
                    {
                        "type": "text",
                        "value": "S2A",
                        "name": "satellite"
                    },
                    {
                        "type": "text",
                        "value": "EDRS",
                        "name": "reception_station"
                    },
                    {
                        "type": "double",
                        "value": "2.0",
                        "name": "channel"
                    },
                    {
                        "type": "double",
                        "value": "22.0",
                        "name": "vcid"
                    },
                    {
                        "type": "text",
                        "value": "RT",
                        "name": "downlink_mode"
                    },
                    {
                        "name": "footprint_details",
                        "type": "object",
                        "values": [
                            {
                                "name": "footprint",
                                "type": "geometry",
                                "value": "POLYGON ((60.126226 42.049647, 60.012327 41.744977, 59.899344 41.440207, 59.787259 41.13534, 59.676056 40.830377, 59.565716 40.52532, 59.456225 40.22017, 59.347564 39.914929, 59.23972 39.609598, 59.132677 39.304178, 59.026419 38.998672, 58.920932 38.693079, 58.816201 38.387403, 58.712213 38.081643, 58.608954 37.775801, 58.506411 37.469879, 58.404569 37.163877, 58.303417 36.857798, 58.202943 36.551641, 58.103132 36.245409, 58.003975 35.939102, 57.905454 35.632721, 57.807563 35.326268, 57.71029 35.019744, 57.613623 34.71315, 57.517553 34.406486, 57.422069 34.099754, 57.32716 33.792955, 57.232816 33.486089, 57.139028 33.179159, 57.045784 32.872164, 56.953076 32.565105, 56.860895 32.257985, 56.769231 31.950802, 56.678075 31.64356, 56.587418 31.336257, 56.497252 31.028896, 56.407568 30.721477, 56.318357 30.414, 56.229612 30.106468, 56.141325 29.79888, 56.053487 29.491237, 55.96609 29.183541, 55.879128 28.875792, 55.792592 28.56799, 55.706476 28.260137, 55.620771 27.952234, 55.535472 27.64428, 55.450567 27.336278, 55.366054 27.028227, 55.281926 26.720128, 55.198175 26.411983, 55.114796 26.103791, 55.031782 25.795554, 54.949127 25.487272, 54.866824 25.178946, 54.784867 24.870577, 54.703251 24.562165, 54.62197 24.25371, 54.541017 23.945215, 54.460388 23.636679, 54.380076 23.328102, 54.300076 23.019486, 54.220383 22.710832, 54.14099 22.402139, 54.061894 22.093409, 53.983089 21.784642, 53.904569 21.475839, 53.82633 21.167, 53.748367 20.858127, 53.670674 20.549218, 53.593247 20.240276, 53.516082 19.931301, 53.439173 19.622294, 53.362516 19.313254, 53.286105 19.004183, 53.209937 18.695081, 53.134007 18.385949, 53.058312 18.076787, 52.982847 17.767596, 52.907607 17.458377, 52.832589 17.149129, 52.757788 16.839855, 52.6832 16.530553, 52.608821 16.221225, 52.534647 15.911871, 52.460675 15.602493, 52.3869 15.293089, 52.313318 14.983662, 52.239926 14.674211, 52.16672 14.364737, 52.093697 14.05524, 52.020851 13.745722, 51.948181 13.436182, 51.875682 13.126621, 51.80335 12.81704, 51.731183 12.507439, 51.659176 12.197818, 51.587327 11.888179, 51.515632 11.578522, 51.444087 11.268847, 51.372689 10.959154, 51.301435 10.649445, 51.230321 10.33972, 51.159345 10.029979, 51.088503 9.720222, 51.017792 9.410451, 50.947209 9.100666, 50.87675 8.790867, 50.806413 8.481055, 50.736194 8.17123, 50.666091 7.861393, 50.5961 7.551544, 50.526218 7.241683, 50.456442 6.931812, 50.38677 6.621931, 50.317198 6.31204, 50.247724 6.00214, 50.178344 5.692231, 50.109055 5.382313, 50.039855 5.072388, 49.970741 4.762455, 49.901711 4.452515, 49.83276 4.142569, 49.763886 3.832617, 49.695087 3.522659, 49.62636 3.212697, 49.557702 2.902729, 49.48911 2.592758, 49.420582 2.282783, 49.352115 1.972805, 49.283706 1.662825, 49.215353 1.352842, 49.147052 1.042857, 49.078801 0.732872, 49.010597 0.422885, 48.942437 0.112898, 48.87432 -0.197089, 48.806241 -0.5070750000000001, 48.738199 -0.817061, 48.670191 -1.127045, 48.602213 -1.437026, 48.534265 -1.747006, 48.466342 -2.056983, 48.398442 -2.366956, 48.330562 -2.676926, 48.2627 -2.986891, 48.194854 -3.296852, 48.12702 -3.606807, 48.059195 -3.916758, 47.991378 -4.226702, 47.923566 -4.536639, 47.855755 -4.84657, 47.787943 -5.156494, 47.720128 -5.466409, 47.652308 -5.776317, 47.58448 -6.086216, 47.516641 -6.396105, 47.448787 -6.705985, 47.380917 -7.015855, 47.313028 -7.325715, 47.245116 -7.635564, 47.177179 -7.945401, 47.109214 -8.255227, 47.041219 -8.565041000000001, 46.973191 -8.874841999999999, 46.905127 -9.184628999999999, 46.837024 -9.494403999999999, 46.76888 -9.804164, 46.700691 -10.11391, 46.632455 -10.423642, 46.564169 -10.733358, 46.495831 -11.043058, 46.427436 -11.352742, 46.358983 -11.66241, 46.290469 -11.972061, 46.22189 -12.281694, 46.153244 -12.59131, 46.084528 -12.900907, 46.015738 -13.210486, 45.946872 -13.520045, 45.877927 -13.829585, 45.8089 -14.139105, 45.739791 -14.448604, 45.670593 -14.758083, 45.601304 -15.06754, 45.53192 -15.376976, 45.462439 -15.68639, 45.392856 -15.995781, 45.323169 -16.305149, 45.253374 -16.614493, 45.183469 -16.923814, 45.113449 -17.233111, 45.043312 -17.542382, 44.973054 -17.851629, 44.902671 -18.16085, 44.832161 -18.470045, 44.76152 -18.779214, 44.690743 -19.088356, 44.619828 -19.39747, 41.930074 -18.818118, 42.006176 -18.509497, 42.082044 -18.200839, 42.157681 -17.892145, 42.233093 -17.583414, 42.308283 -17.274648, 42.383256 -16.965847, 42.458014 -16.657012, 42.532564 -16.348143, 42.606908 -16.03924, 42.681051 -15.730305, 42.754995 -15.421338, 42.828747 -15.112339, 42.902308 -14.803309, 42.975683 -14.494248, 43.048876 -14.185157, 43.121889 -13.876036, 43.194728 -13.566886, 43.267396 -13.257708, 43.339895 -12.948501, 43.41223 -12.639267, 43.484404 -12.330006, 43.556421 -12.020718, 43.628283 -11.711405, 43.699995 -11.402065, 43.771558 -11.092701, 43.842978 -10.783312, 43.914257 -10.4739, 43.985399 -10.164463, 44.056406 -9.855003999999999, 44.127282 -9.545522, 44.19803 -9.236018, 44.268653 -8.926493000000001, 44.339154 -8.616946, 44.409537 -8.307378999999999, 44.479804 -7.997792, 44.549959 -7.688185, 44.620004 -7.378559, 44.689943 -7.068914, 44.759778 -6.759252, 44.829513 -6.449571, 44.89915 -6.139874, 44.968693 -5.830159, 45.038144 -5.520428, 45.107506 -5.210682, 45.176781 -4.90092, 45.245973 -4.591143, 45.315085 -4.281352, 45.38412 -3.971547, 45.453079 -3.661728, 45.521967 -3.351897, 45.590785 -3.042053, 45.659538 -2.732197, 45.728226 -2.422329, 45.796854 -2.112451, 45.865424 -1.802562, 45.933938 -1.492662, 46.0024 -1.182753, 46.070811 -0.872835, 46.139176 -0.562908, 46.207496 -0.252972, 46.275774 0.056971, 46.344013 0.366922, 46.412216 0.676879, 46.480385 0.9868440000000001, 46.548522 1.296814, 46.616632 1.60679, 46.684715 1.91677, 46.752776 2.226756, 46.820816 2.536746, 46.888838 2.846739, 46.956845 3.156736, 47.024838 3.466736, 47.092822 3.776738, 47.160797 4.086742, 47.228769 4.396748, 47.296738 4.706755, 47.364708 5.016762, 47.432682 5.32677, 47.500662 5.636777, 47.568651 5.946784, 47.636651 6.256789, 47.704666 6.566793, 47.772698 6.876794, 47.840749 7.186793, 47.908823 7.496789, 47.976922 7.806782, 48.045049 8.116771, 48.113206 8.426755, 48.181397 8.736734999999999, 48.249624 9.046709999999999, 48.31789 9.356678, 48.386197 9.666641, 48.45455 9.976597999999999, 48.522949 10.286547, 48.591399 10.596489, 48.659903 10.906423, 48.728462 11.216348, 48.79708 11.526265, 48.865756 11.836173, 48.934498 12.146071, 49.003306 12.45596, 49.072186 12.765838, 49.141139 13.075704, 49.210168 13.38556, 49.279277 13.695403, 49.348469 14.005234, 49.417746 14.315053, 49.487113 14.624858, 49.556571 14.93465, 49.626124 15.244428, 49.695776 15.554191, 49.765529 15.863939, 49.835387 16.173672, 49.905354 16.483389, 49.975431 16.79309, 50.045623 17.102774, 50.115934 17.412441, 50.186366 17.72209, 50.256922 18.031721, 50.327608 18.341334, 50.398425 18.650928, 50.469378 18.960502, 50.54047 19.270057, 50.611705 19.579591, 50.683086 19.889104, 50.754613 20.198597, 50.826294 20.508068, 50.898132 20.817516, 50.970132 21.126943, 51.042297 21.436346, 51.114632 21.745726, 51.187141 22.055081, 51.259827 22.364413, 51.332694 22.673719, 51.405747 22.983001, 51.478991 23.292256, 51.552429 23.601485, 51.626065 23.910688, 51.699905 24.219863, 51.773952 24.529011, 51.848211 24.838131, 51.922688 25.147222, 51.997385 25.456284, 52.072309 25.765316, 52.147464 26.074318, 52.222855 26.38329, 52.298487 26.692231, 52.374365 27.00114, 52.450494 27.310018, 52.526879 27.618863, 52.603526 27.927674, 52.68044 28.236453, 52.757621 28.545198, 52.83508 28.853908, 52.912822 29.162583, 52.990854 29.471223, 53.069181 29.779827, 53.14781 30.088394, 53.226746 30.396924, 53.305996 30.705416, 53.385565 31.01387, 53.465461 31.322286, 53.545689 31.630662, 53.626258 31.938999, 53.707172 32.247295, 53.78844 32.55555, 53.870068 32.863764, 53.952063 33.171935, 54.034433 33.480064, 54.117185 33.78815, 54.200327 34.096192, 54.283867 34.404189, 54.367812 34.712142, 54.452171 35.020048, 54.536951 35.327909, 54.622161 35.635722, 54.707811 35.943488, 54.793908 36.251206, 54.88046 36.558875, 54.967471 36.866494, 55.054957 37.174064, 55.142927 37.481582, 55.231391 37.789049, 55.320359 38.096464, 55.409842 38.403825, 55.499848 38.711133, 55.59039 39.018386, 55.681478 39.325584, 55.773123 39.632726, 55.865337 39.939811, 55.95813 40.246839, 56.051516 40.553807, 56.145505 40.860717, 56.240112 41.167566, 56.335348 41.474355, 56.431226 41.781081, 56.52776 42.087745, 56.624964 42.394345, 56.722851 42.700881, 60.126226 42.049647))"
                            }
                        ]
                    }
                ],
                "name": "details"
            }
        ]

    def test_insert_rep_pass_only_hktm(self):

        filename = "S2A_OPER_REP_PASS_E_ONLY_HKTM.EOF"
        file_path = os.path.dirname(os.path.abspath(__file__)) + "/inputs/" + filename

        returned_value = ingestion.command_process_file("s2boa.ingestions.ingestion_edrs_acquisition.ingestion_edrs_acquisition", file_path)

        assert returned_value[0]["status"] == eboa_engine.exit_codes["OK"]["status"]

        # Check sources
        source = self.session.query(Source).filter(Source.validity_start == "2018-07-21T01:47:42.854151",
                                                   Source.validity_stop == "2018-07-21T01:47:43.833085",
                                                   Source.name == "S2A_OPER_REP_PASS_E_ONLY_HKTM.EOF",
                                                   Source.processor == "ingestion_edrs_acquisition.py").all()

        assert len(source) == 1

        # Check number of events generated
        events = self.session.query(Event).join(Source).filter(Source.name == "S2A_OPER_REP_PASS_E_ONLY_HKTM.EOF").all()

        assert len(events) == 1

